<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="da05.files/filelist.xml">
<link rel=Edit-Time-Data href="da05.files/editdata.mso">
<link rel=OLE-Object-Data href="da05.files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>第5章 数组和广义表</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>126</o:Author>
  <o:LastAuthor>Legend User</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>1419</o:TotalTime>
  <o:LastPrinted>2004-04-09T08:57:00Z</o:LastPrinted>
  <o:Created>2004-06-27T07:46:00Z</o:Created>
  <o:LastSaved>2004-06-27T07:46:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>4038</o:Words>
  <o:Characters>23022</o:Characters>
  <o:Company>asus</o:Company>
  <o:Lines>191</o:Lines>
  <o:Paragraphs>54</o:Paragraphs>
  <o:CharactersWithSpaces>27006</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HideSpellingErrors/>
  <w:HideGrammaticalErrors/>
  <w:PunctuationKerning/>
  <w:DrawingGridHorizontalSpacing>5.55 磅</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>15.05 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:SelectEntireFieldWithStartOrEnd/>
   <w:UseWord2002TableStyleRules/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:none;
	tab-stops:center 207.65pt right 415.3pt;
	layout-grid-mode:char;
	border:none;
	mso-border-bottom-alt:solid windowtext .75pt;
	padding:0cm;
	mso-padding-alt:0cm 0cm 1.0pt 0cm;
	font-size:9.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:center 207.65pt right 415.3pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	font-family:宋体;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;
	mso-footnote-separator:url("da05.files/header.htm") fs;
	mso-footnote-continuation-separator:url("da05.files/header.htm") fcs;
	mso-endnote-separator:url("da05.files/header.htm") es;
	mso-endnote-continuation-separator:url("da05.files/header.htm") ecs;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:1.0cm 42.55pt 14.2pt 42.55pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-header:url("da05.files/header.htm") h1;
	mso-even-footer:url("da05.files/header.htm") ef1;
	mso-footer:url("da05.files/header.htm") f1;
	mso-paper-source:0;
	layout-grid:15.05pt .6pt;
	mso-layout-grid-char-alt:2421;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:36975487;
	mso-list-type:hybrid;
	mso-list-template-ids:-428323022 1670303142 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:266232833;
	mso-list-type:hybrid;
	mso-list-template-ids:1938962812 -2038022860 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l1:level1
	{mso-level-text:（%1）;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-36.0pt;}
@list l2
	{mso-list-id:391733327;
	mso-list-type:hybrid;
	mso-list-template-ids:-753644200 -1084441794 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l2:level1
	{mso-level-text:（%1）;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-36.0pt;}
@list l3
	{mso-list-id:1818299887;
	mso-list-type:hybrid;
	mso-list-template-ids:178171470 -1709168752 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l3:level1
	{mso-level-number-format:alpha-upper;
	mso-level-tab-stop:39.0pt;
	mso-level-number-position:left;
	margin-left:39.0pt;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.05pt .6pt;mso-layout-grid-char-alt:
2421'>

<p class=MsoPlainText style='text-indent:175.4pt;mso-char-indent-count:12.02'><span
style='font-size:14.0pt;mso-hansi-font-family:宋体'>第五章 数组和广义表<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:10.5pt;font-family:宋体'>一、<span
style='color:red'>选择题<span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span></span></span><span lang=EN-US><o:p></o:p></span></span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;
 mso-yfti-tbllook:191;mso-padding-alt:0cm 5.4pt 0cm 5.4pt;mso-border-insideh:
 .5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;height:7.15pt'>
  <td valign=top style='border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>1.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>2.1L<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>2.2J<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>2.3C<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>2.4I<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>2.5C<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>3.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>4.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>5.A<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>6.1H<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>6.2C<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:7.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>6.3E<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>6.4A<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>6.5F<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>7.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>8.1E<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>8.2A<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>8.3B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>9.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>10.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>11.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>12.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>13.A<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>14.B<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>15.B<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>16.A<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>17.C<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>18.D<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>19.C<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>20.D<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>21.F<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>22.C<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>23.D<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>24.C<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>25.A<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>26.C<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3;mso-yfti-lastrow:yes;height:5.15pt'>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>27.A<o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:5.15pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='mso-bidi-font-size:10.5pt;font-family:宋体'>二、判断题<span
lang=EN-US><o:p></o:p></span></span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;
 mso-yfti-tbllook:191;mso-padding-alt:0cm 5.4pt 0cm 5.4pt;mso-border-insideh:
 .5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td valign=top style='border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>1. </span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>2.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>√<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>3.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>√<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>4.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>5.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>6. </span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>7.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>√<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>8.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>9.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>10.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>11.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>×<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>12.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体;color:red'>√</span><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;mso-yfti-lastrow:yes'>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>13.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体'>√<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'>14.</span><span style='mso-bidi-font-size:10.5pt;font-family:
  宋体;color:red'>√</span><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p></o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
  font-family:宋体'><o:p>&nbsp;</o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:16.2pt;mso-char-indent-count:1.46'><span
style='mso-bidi-font-size:10.5pt;font-family:宋体'>部分答案解释如下。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>1. </span><span
style='mso-hansi-font-family:宋体'>错误。对于完全二叉树，用一维数组作存储结构是效率高的（存储密度大）。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>4. </span><span
style='mso-hansi-font-family:宋体'>错误。数组是具有相同性质的数据元素的集合，数据元素不仅有值，还有下标。因此，可以说数祖是元素值和下标构成的偶对的有穷集合。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>5. </span><span
style='mso-hansi-font-family:宋体'>错误。数组在维数和界偶确定后，其元素个数已经确定，不能进行插入和删除运算。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>6. </span><span
style='mso-hansi-font-family:宋体'>错误。稀疏矩阵转置后，除行列下标及行列数互换外，还必须确定该元素转置后在新三元组中的位置。<span
lang=EN-US> <o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>8. </span><span
style='mso-hansi-font-family:宋体'>错误。广义表的取表尾运算，是非空广义表除去表头元素，剩余元素组成的表，不可能是原子。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>9. </span><span
style='mso-hansi-font-family:宋体'>错误。广义表的表头就是广义表的第一个元素。只有非空广义表才能取表头。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>10. </span><span
style='mso-hansi-font-family:宋体'>错误。广义表中元素可以是原子，也可以是表（包括空表和非空表）。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>11. </span><span
style='mso-hansi-font-family:宋体'>错误。广义表的表尾，指去掉表头元素后，剩余元素所组成的表。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>三、填空题<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>1. </span><span
style='mso-hansi-font-family:宋体'>顺序存储结构<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>2.</span>（<span
lang=EN-US>1</span>）<span lang=EN-US>9572</span>（<span lang=EN-US>2</span>）<span
lang=EN-US>1228<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>3.</span>（<span lang=EN-US>1</span>）<span
lang=EN-US>9174</span>（<span lang=EN-US>2</span>）<span lang=EN-US>8788<span
style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>4. 1100<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>5. 1164
</span><span style='mso-hansi-font-family:宋体'>公式：<span lang=EN-US>LOC(a<sub>ijk</sub>)=LOC(a<sub>000</sub>)+[v2*v3*(i-c<sub>1</sub>)+v3*(j-c<sub>2</sub>)+(k-c<sub>3</sub>)]*l
(l</span>为每个元素所占单元数<span lang=EN-US>)<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>6. 232<span
style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>7. 1340<span
style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>8. 1196<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>9. </span><span style='mso-hansi-font-family:
宋体'>第<span lang=EN-US>1</span>行第<span lang=EN-US>3</span>列<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>10.
(1)270 (2)27 (3)2204<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>11. i(i-1)/2+j (1&lt;=i,j&lt;=n)<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>12. (1)n(n+1)/2
(2)i(i+1)/2 (</span><span style='mso-hansi-font-family:宋体'>或<span lang=EN-US>j(j+1)/2)
(3)i(i-1)/2+j (4)j(j-1)/2+i (1&lt;=i,j&lt;=n)<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>13. 1038
</span><span style='mso-hansi-font-family:宋体'>三对角矩阵按行存储：<span lang=EN-US>k=2(i-1)+j
(1&lt;=i,j&lt;=n) <o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>14. 33 (k=i(i-1)/2+j)
(1&lt;=i,j&lt;=n)<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>15. </span><span
style='mso-hansi-font-family:宋体'>非零元很少<span lang=EN-US>(t&lt;&lt;m*n)</span>且分布没有规律<span
lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>16. </span>节省存储空间。<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>17. </span><span
style='mso-hansi-font-family:宋体'>上三角矩阵中，主对角线上第<span lang=EN-US>r(1</span></span><span
lang=EN-US style='font-family:Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:
宋体;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>&pound;</span></span><span lang=EN-US
style='mso-hansi-font-family:宋体'>r</span><span lang=EN-US style='font-family:
Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:宋体;mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>&pound;</span></span><span lang=EN-US style='mso-hansi-font-family:宋体'>n) </span><span
style='mso-hansi-font-family:宋体'>行有<span lang=EN-US>n-r+1</span>个元素，<span
lang=EN-US>a<sub>ij</sub></span>所在行的元素数是<span lang=EN-US>j-i+1</span>。所以，元素在一维数组的下标<span
lang=EN-US>k</span>和二维数组下标关系<span lang=EN-US>:k=((i-1)*(2n-i+2))/2+(j-i+1)=(i-1)(2n-i)/2+j<span
style='mso-spacerun:yes'>&nbsp; </span>(i</span></span><span lang=EN-US
style='font-family:Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:宋体;
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>&pound;</span></span><span lang=EN-US
style='mso-hansi-font-family:宋体'>j)<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>18.
93<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>19. i(i-1)/2+j <span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>20.
</span><span style='mso-hansi-font-family:宋体'>线性表<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>21.
</span>其余元素组成的表<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>22. </span><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>） 原子（单元素）是结构上不可再分的，可以是一个数或一个结构；而表带结构，本质就是广义表，因作为广义表的元素故称为子表。<span
lang=EN-US> <o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:10.85pt;mso-char-indent-count:.98'><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>2</span>）大写字母 （<span
lang=EN-US>3</span>）小写字母 （<span lang=EN-US>4</span>）表中元素的个数（<span lang=EN-US>5</span>）表展开后所含括号的层数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>23. </span><span
style='mso-hansi-font-family:宋体'>深度 <span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>24.</span>（<span lang=EN-US>1</span>）（） （<span
lang=EN-US>2</span>）（（））<span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span></span>（<span lang=EN-US>3</span>）<span lang=EN-US>2<span
style='mso-spacerun:yes'>&nbsp; </span></span>（<span lang=EN-US>4</span>）<span
lang=EN-US>2<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>25. head</span><span style='font-family:宋体'>（<span lang=EN-US>head</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>tail</span>（<span lang=EN-US>head</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>tail</span>（<span lang=EN-US>A</span>）））））））<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>26. </span><span
style='mso-hansi-font-family:宋体'>表展开后所含括号的层数<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>27.</span>（<span lang=EN-US>1</span>）<span
lang=EN-US>5<span style='mso-spacerun:yes'>&nbsp; </span></span>（<span
lang=EN-US>2</span>）<span lang=EN-US>3<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>28. head(head(tail(LS)))<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>29. head(tail(tail(head(tail(head(A))))))<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>30. head(tail(head(tail(H))))<span
style='mso-spacerun:yes'>&nbsp; </span>31. (b) <span
style='mso-spacerun:yes'>&nbsp;</span>32. (x,y,z)<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>33. (d,e)<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>34. GetHead(GetHead(GetTail(L)))<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>35. </span><span
style='mso-hansi-font-family:宋体'>本算法中，首先数组<span lang=EN-US>b</span>中元素以逆置顺序放入<span
lang=EN-US>d</span>数组中，然后数组<span lang=EN-US>a</span>和数组<span lang=EN-US>d</span>的元素比较，将大者拷贝到数组<span
lang=EN-US>c</span>。第一个<span lang=EN-US>WHILE</span>循环到数组<span lang=EN-US>a</span>或数组<span
lang=EN-US>d</span>结尾，第二个和第三个<span lang=EN-US>WHILE</span>语句只能执行其中的一个。<span
lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>b[m-i+1]</span>（<span lang=EN-US>2</span>）<span lang=EN-US>x:=a[i]</span>（<span
lang=EN-US>3</span>）<span lang=EN-US>i:=i+1</span>（<span lang=EN-US>4</span>）<span
lang=EN-US>x:=d[j]</span>（<span lang=EN-US>5</span>）<span lang=EN-US>j:=j+1 </span>（<span
lang=EN-US>6</span>）<span lang=EN-US>k:=k+1</span>（<span lang=EN-US>7</span>）<span
lang=EN-US>i&lt;=l</span>（<span lang=EN-US>8</span>）<span lang=EN-US>j&lt;=m<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>36.</span><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）<span lang=EN-US>(i==k)
<b style='mso-bidi-font-weight:normal'>return</b></span>（<span lang=EN-US>2</span>）<span
lang=EN-US>i+1</span>（<span lang=EN-US>3</span>）<span lang=EN-US>i-1</span>（<span
lang=EN-US>4</span>）<span lang=EN-US>i!=k<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span></span><span style='mso-hansi-font-family:
宋体'>本算法利用快速排序思想，找到第<span lang=EN-US>k</span>个元素的位置（下标<span lang=EN-US>k-1</span>因而开初有<span
lang=EN-US>k--</span>）。内层<span lang=EN-US>do</span>循环以<span lang=EN-US>t(t=a[low])</span>为“枢轴”找到其应在<span
lang=EN-US>i</span>位置。这时若<span lang=EN-US>i</span>等于<span lang=EN-US>k</span>，则算法结束。（即第一个空格处<span
lang=EN-US>if(i==k) <b style='mso-bidi-font-weight:normal'>return</b>)</span>。否则，若<span
lang=EN-US>i&lt;k</span>，就在<span lang=EN-US>i+1</span>至<span lang=EN-US>high</span>中间去查；若<span
lang=EN-US>i&gt;k</span>，则在<span lang=EN-US>low</span>到<span lang=EN-US>i-1</span>间去找，直到找到<span
lang=EN-US>i=k</span>为止。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>37.</span><span
style='mso-hansi-font-family:宋体'>逆置广义表的递归模型如下<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='tab-stops:right 510.2pt'><span lang=EN-US
style='mso-hansi-font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>f(LS)=<sub><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:381pt;
 height:75.75pt' o:ole="">
 <v:imagedata src="da05.files/image001.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=508 height=101
src="da05.files/image002.gif" v:shapes="_x0000_i1025"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1025"
  DrawAspect="Content" ObjectID="_1149856324">
 </o:OLEObject>
</xml><![endif]--> <span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>上面<span
lang=EN-US>app<b style='mso-bidi-font-weight:normal'>END</b>(a,b)</span>功能是将广义表<span
lang=EN-US>a</span>和<span lang=EN-US>b</span>作为元素的广义表连接起来。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>(p-&gt;tag==0)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>//</span>处理原子<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>2</span>）<span
lang=EN-US>h=reverse(p-&gt;val.<span style='color:red'>ptr</span>.hp)<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>//</span>处理表头<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>3</span>）<span
lang=EN-US>(p-&gt;val.<span style='color:red'>ptr</span>.tp)<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>//</span>产生表尾的逆置广义表<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>4</span>）<span
lang=EN-US>s-&gt;val.<span style='color:red'>ptr</span>.tp=t;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span>连接<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>5</span>）<span
lang=EN-US>q-&gt;val.<span style='color:red'>ptr</span>.hp=h<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span>头结点指向广义表<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>38. </span><span
style='mso-hansi-font-family:宋体'>本题要求将<span lang=EN-US>1</span>，<span
lang=EN-US>2</span>，<span lang=EN-US>...,n*n</span>个自然数，按蛇型方式存放在二位数组<span
lang=EN-US>A[n][n]</span>中。“蛇型”方式，即是按“副对角线”平行的各对角线，从左下到右上，再从右上到左下，存放<span
lang=EN-US>n<sup>2</sup></span>个整数。对角线共<span lang=EN-US>2n-1</span>条，在副对角线上方的对角线，题目中用<span
lang=EN-US>k</span>表示第<span lang=EN-US>k</span>条对角线（最左上角<span lang=EN-US>k=1</span>），数组元素<span
lang=EN-US>x</span>和<span lang=EN-US>y</span>方向坐标之和为<span lang=EN-US>k+1</span>（即题目中的<span
lang=EN-US>i+j=k+1</span>）。副对角线下方第<span lang=EN-US>k</span>条对角线与第<span
lang=EN-US>2n-k</span>条对角线对称，其元素的下标等于其对称元素的相应坐标各加<span lang=EN-US>(k-n)</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>k&lt;=2*n-1 //</span>共填<span lang=EN-US>2*n-1</span>条对角线<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>2</span>）<span
lang=EN-US>q=2*n-k<span style='mso-spacerun:yes'>&nbsp; </span>//</span>副对角线以下的各条对角线上的元素数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>3</span>）<span
lang=EN-US>k%2</span>！<span lang=EN-US>=0<span style='mso-spacerun:yes'>&nbsp;
</span>//k</span>为偶数时从右上到左下，否则从左下向右上填数。（本处计算下标<span lang=EN-US>i</span>和<span
lang=EN-US>j</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>4</span>）<span
lang=EN-US>k&gt;=n<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span>修改副对角线下方的下标<span lang=EN-US>i</span>和<span lang=EN-US>j</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>5</span>）<span
lang=EN-US>m++</span>；或<span lang=EN-US>m=m+1 //</span>为填下个数作准备，<span
lang=EN-US>m</span>变化范围<span lang=EN-US>1..n*n</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>本题解法的另一种思路见本章算法设计题第<span
lang=EN-US>9</span>题。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>39.</span><span
style='mso-hansi-font-family:宋体'>本题难点有二：一是如何求下一出圈人的位置，二是某人出圈后对该人的位置如何处理。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
style='mso-hansi-font-family:宋体'>按题中要求，从第<span lang=EN-US>s</span>个人开始报数，报到第<span
lang=EN-US>m</span>个人，此人出圈。<span lang=EN-US>n</span>个人围成一圈，可看作环状，则下个出圈人，其位置是<span
lang=EN-US>(s+m-1)%n</span>。<span lang=EN-US>n</span>是人数，是个变量，出圈一人减<span
lang=EN-US>1</span>，算法中用<span lang=EN-US>i</span>表示。对第二个问题，算法中用出圈人后面人的位置依次前移，并把出圈人的位置（下标）存放到当时最后一个人的位置（下标）。算法最后打印出圈人的顺序。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>(s+m-1) MOD i <span style='mso-spacerun:yes'>&nbsp;</span>//</span>计算出圈人<span
lang=EN-US>s1<o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>2</span>）<span
lang=EN-US>s1:=i<span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span>//</span>若<span
lang=EN-US>s1=0,</span>说明是第<span lang=EN-US>i</span>个人出圈（<span lang=EN-US>i%i=0</span>）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>3</span>）<span
lang=EN-US>s1 TO i-1 <span style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>//</span>从<span lang=EN-US>s1</span>到<span
lang=EN-US>i</span>依次前移，使人数减<span lang=EN-US>1</span>，并将出圈人放到当前最后一个位置<span
lang=EN-US>A[i]=w</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>40. </span><span
style='mso-hansi-font-family:宋体'>若第<span lang=EN-US>n</span>件物品能放入背包，则问题变为能否再从<span
lang=EN-US>n-1</span>件物品中选出若干件放入背包（这时背包可放入物品的重量变为<span lang=EN-US>s-w[n]</span>）。若第<span
lang=EN-US>n</span>件物品不能放入背包，则考虑从<span lang=EN-US>n-1</span>件物品选若干件放入背包（这时背包可放入物品仍为<span
lang=EN-US>s</span>）。若最终<span lang=EN-US>s=0,</span>则有一解；否则，若<span lang=EN-US>s&lt;0</span>或虽然<span
lang=EN-US>s&gt;0</span>但物品数<span lang=EN-US>n&lt;1,</span>则无解。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>s-w[n],n-1<span style='mso-spacerun:yes'>&nbsp; </span>//Knap(s-w[n],n-1)=true<o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>2</span>）<span
lang=EN-US>s,n-1<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>// Knap</span>←<span
lang=EN-US>Knap(s,n-1)<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>四、应用题<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>1</span><span
style='mso-hansi-font-family:宋体'>、<span lang=EN-US>958<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>三维数组以行为主序存储，其元素地址公式为：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:49.6pt;mso-char-indent-count:4.47'><span
lang=EN-US style='mso-hansi-font-family:宋体'>LOC(A<sub>ijk</sub>)=LOC(A<sub>c1c2c3</sub>)+[(i-c<sub>1</sub>)V<sub>2</sub>V<sub>3</sub>+(j-c<sub>2</sub>)V<sub>3</sub>+(k-c<sub>3</sub>)]*L+1<o:p></o:p></span></p>

<p class=MsoPlainText style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
style='mso-hansi-font-family:宋体'>其中<span lang=EN-US>c<sub>i</sub>,d<sub>i</sub></span>是各维的下界和上界，<span
lang=EN-US>V<sub>i</sub>=d<sub>i</sub>-c<sub>i</sub>+1</span>是各维元素个数，<span
lang=EN-US>L</span>是一个元素所占的存储单元数。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>2. b</span><span
style='mso-hansi-font-family:宋体'>对角矩阵的<span lang=EN-US>b</span>条对角线，在主对角线上方和下方各有</span><span
lang=EN-US style='font-family:Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:
宋体;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>&euml;</span></span><span lang=EN-US
style='mso-hansi-font-family:宋体'>b/2</span><span lang=EN-US style='font-family:
Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:宋体;mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>&ucirc;</span></span><span style='mso-hansi-font-family:宋体'>条对角线<span
lang=EN-US>(</span>为叙述方便，下面设<span lang=EN-US>a=</span></span><span lang=EN-US
style='font-family:Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:宋体;
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>&euml;</span></span><span lang=EN-US
style='mso-hansi-font-family:宋体'>b/2</span><span lang=EN-US style='font-family:
Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:宋体;mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>&ucirc;</span></span><span lang=EN-US style='mso-hansi-font-family:宋体'>)</span><span
style='mso-hansi-font-family:宋体'>。从第<span lang=EN-US>1</span>行至第<span
lang=EN-US>a</span>行，每行上的元素数依次是<span lang=EN-US>a+1,a+2,...,b-2,b-1,</span>最后的<span
lang=EN-US>a</span>行上的元素个数是<span lang=EN-US> b-1</span>，<span lang=EN-US>b-2,...,a+1</span>。中间的<span
lang=EN-US>(n-2a )</span>行，每行元素个数都是<span lang=EN-US>b</span>。故<span lang=EN-US>b</span>条对角线上元素个数为
<span lang=EN-US>(n-2a)b+a*(a+b)</span>。存放在一维数组<span lang=EN-US>V[1..nb-a(b-a)]</span>中，其下标<span
lang=EN-US>k</span>与元素在二维数组中下标<span lang=EN-US>i</span>和<span lang=EN-US>j</span>的关系为：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:11.1pt;text-indent:-11.1pt;mso-char-indent-count:
-1.0'><span lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>k=<sub><!--[if gte vml 1]><v:shape
 id="_x0000_i1026" type="#_x0000_t75" style='width:273.75pt;height:84pt' o:ole="">
 <v:imagedata src="da05.files/image003.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=365 height=112
src="da05.files/image004.gif" v:shapes="_x0000_i1026"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1026"
  DrawAspect="Content" ObjectID="_1149856329">
 </o:OLEObject>
</xml><![endif]--> <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'>3</span><span style='font-family:宋体'>．每个元素<span lang=EN-US>32</span>个二进制位，主存字长<span
lang=EN-US>16</span>位，故每个元素占<span lang=EN-US>2</span>个字长，行下标可平移至<span
lang=EN-US>1</span>到<span lang=EN-US>11</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0;
tab-stops:39.0pt'><span style='font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>242<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>（<span
lang=EN-US>2</span>）<span lang=EN-US>22<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>（<span lang=EN-US>3</span>）<span
lang=EN-US>s+182<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>（<span
lang=EN-US>4</span>）<span lang=EN-US>s+142<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>4</span><span
style='mso-hansi-font-family:宋体'>．<span lang=EN-US>1784<span
style='mso-spacerun:yes'>&nbsp; </span>(</span>公式：<span lang=EN-US>Loc(A<sub>ijkl</sub>)=100(</span>基地址<span
lang=EN-US>)+[(i-c<sub>1</sub>)v<sub>2</sub>v<sub>3</sub>v<sub>4</sub>+(j-c<sub>2</sub>)v<sub>3</sub>v<sub>4</sub>+(k-c<sub>3</sub>)v<sub>4</sub>+(l-c<sub>4</sub>)]*4<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>5. 1210+108L
(LOC(A[1,3,-2])=1210+[(k-c<sub>3</sub>)v<sub>2</sub>v<sub>1</sub>+(j-c<sub>2</sub>)v<sub>1</sub>+(i-c<sub>1</sub>)]*L</span><span
style='mso-hansi-font-family:宋体'>（设每个元素占<span lang=EN-US>L</span>个存储单元）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>6. </span><span
style='mso-hansi-font-family:宋体'>数组占的存储字节数<span lang=EN-US>=10*9*7*4=2520</span>；<span
lang=EN-US>A[5,0,7]</span>的存储地址<span lang=EN-US>=100+[4*9*7+2*7+5]*4=1184<o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:33.25pt;text-indent:-33.25pt;
mso-char-indent-count:-3.0'><span lang=EN-US style='mso-hansi-font-family:宋体'>7.
</span><span style='mso-hansi-font-family:宋体'>五对角矩阵按行存储，元素在一维数组中下标（从<span
lang=EN-US>1</span>开始）<span lang=EN-US>k</span>与<span lang=EN-US>i,j</span>的关系如下<span
lang=EN-US>:<o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:32.85pt;mso-para-margin-left:2.0gd;
text-indent:-10.65pt;mso-char-indent-count:-.96'><span lang=EN-US
style='mso-hansi-font-family:宋体'>k=<sub><!--[if gte vml 1]><v:shape id="_x0000_i1027"
 type="#_x0000_t75" style='width:141pt;height:56.25pt' o:ole="">
 <v:imagedata src="da05.files/image005.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=188 height=75
src="da05.files/image006.gif" v:shapes="_x0000_i1027"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1027"
  DrawAspect="Content" ObjectID="_1149856333">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoPlainText style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='mso-hansi-font-family:宋体'>A[15,16]</span><span
style='mso-hansi-font-family:宋体'>是第<span lang=EN-US>71</span>个元素，在向量<span
lang=EN-US>[-10:m]</span>中的存储位置是<span lang=EN-US>60 </span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>8</span><span
style='mso-hansi-font-family:宋体'>．（<span lang=EN-US>1</span>）<span lang=EN-US>540<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></span>（<span lang=EN-US>2</span>）<span
lang=EN-US>108 <span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span>（<span
lang=EN-US>3</span>）<span lang=EN-US>i=3,j=10</span>，即<span lang=EN-US>A[3,10]<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>9</span>． <span lang=EN-US>k=i(i-1)/2+j<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>10. </span><span
style='mso-hansi-font-family:宋体'>稀疏矩阵<span lang=EN-US>A</span>有<span
lang=EN-US>t</span>个非零元素，加上行数<span lang=EN-US>mu</span>、列数<span lang=EN-US>nu</span>和非零元素个数<span
lang=EN-US>tu(</span>也算一个三元组<span lang=EN-US>)</span>，共占用三元组表<span lang=EN-US>LTMA</span>的<span
lang=EN-US>3(t+1)</span>个存储单元，用二维数组存储时占用<span lang=EN-US>m*n</span>个单元，只有当<span
lang=EN-US>3(t+1)&lt;m*n</span>时，用<span lang=EN-US>LTMA</span>表示<span
lang=EN-US>A</span>才有意义。解不等式得<span lang=EN-US>t&lt;m*n/3-1</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>11</span><span style='font-family:宋体'>．参见<span lang=EN-US>10</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>12. </span><span
style='mso-hansi-font-family:宋体'>题中矩阵非零元素用三元组表存储，查找某非零元素时，按常规要从第一个元素开始查找，属于顺序查找，时间复杂度为<span
lang=EN-US>O(n)</span>。若使查找时间得到改善，可以建立索引，将各行行号及各行第一个非零元素在数组<span lang=EN-US>B</span>中的位置（下标）偶对放入一向量<span
lang=EN-US>C</span>中。若查找非零元素，可先在数组<span lang=EN-US>C</span>中用折半查找到该非零元素的行号，并取出该行第一个非零元素在<span
lang=EN-US>B</span>中的位置，再到<span lang=EN-US>B</span>中顺序（或折半）查找该元素，这时时间复杂度为<span
lang=EN-US>O(l</span></span><span lang=EN-US style='font-family:"Times New Roman";
mso-bidi-font-family:"Courier New"'>o</span><span lang=EN-US style='mso-hansi-font-family:
宋体'>gn)</span><span style='mso-hansi-font-family:宋体'>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>13</span><span
style='mso-hansi-font-family:宋体'>．（<span lang=EN-US>1</span>）<span lang=EN-US>176<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span></span>（<span lang=EN-US>2</span>）<span
lang=EN-US>76</span>和<span lang=EN-US>108</span></span><span lang=EN-US
style='font-family:"Times New Roman";mso-bidi-font-family:"Courier New"'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>3</span>）<span lang=EN-US>28</span>和<span
lang=EN-US>116</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>14</span><span
style='mso-hansi-font-family:宋体'>．（<span lang=EN-US>1</span>）<span lang=EN-US>k
= 3(i-1)<span style='mso-spacerun:yes'>&nbsp; </span>(</span>主对角线左下角，即<span
lang=EN-US>i=j+1)<o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:42.8pt;mso-char-indent-count:3.86'><span
lang=EN-US style='mso-hansi-font-family:宋体'>k = 3(i-1)+1<span
style='mso-spacerun:yes'>&nbsp; </span>(</span><span style='mso-hansi-font-family:
宋体'>主对角线上，即<span lang=EN-US>i=j)<o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:42.8pt;mso-char-indent-count:3.86'><span
lang=EN-US style='mso-hansi-font-family:宋体'>k = 3(i-1)+2<span
style='mso-spacerun:yes'>&nbsp; </span>(</span><span style='mso-hansi-font-family:
宋体'>主对角线上，即<span lang=EN-US>i=j-1)<o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:26.5pt;mso-char-indent-count:2.39'><span
style='mso-hansi-font-family:宋体'>由以上三式，得<span lang=EN-US> k=2(i-1)+j<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>(1</span></span><span
lang=EN-US style='font-family:Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:
宋体;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>&pound;</span></span><span lang=EN-US
style='mso-hansi-font-family:宋体'>i,j</span><span lang=EN-US style='font-family:
Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:宋体;mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>&pound;</span></span><span lang=EN-US style='mso-hansi-font-family:宋体'>n; 1</span><span
lang=EN-US style='font-family:Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:
宋体;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>&pound;</span></span><span lang=EN-US
style='mso-hansi-font-family:宋体'>k</span><span lang=EN-US style='font-family:
Symbol;mso-ascii-font-family:宋体;mso-hansi-font-family:宋体;mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>&pound;</span></span><span lang=EN-US style='mso-hansi-font-family:宋体'>3n-2)<o:p></o:p></span></p>

<p class=MsoPlainText style='text-indent:21.0pt'><span style='mso-hansi-font-family:
宋体'>（<span lang=EN-US>2</span>）<span lang=EN-US>10<sup>3</sup>*10<sup>3</sup>-(3*10<sup>3</sup>-2)<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>15. </span><span
style='mso-hansi-font-family:宋体'>稀疏矩阵<span lang=EN-US>A</span>采用二维数组存储时，需要<span
lang=EN-US>n*n</span>个存储单元，完成求Σ<span lang=EN-US>a<sub>ii</sub>(1&lt;=i&lt;=n)</span>时，由于<span
lang=EN-US>a[i][i]</span>随机存取，速度快。但采用三元组表时，若非零元素个数为<span lang=EN-US>t</span>，需<span
lang=EN-US>3(t+1)</span>个存储单元（第一个分量中存稀疏矩阵<span lang=EN-US>A</span>的行数，列数和非零元素个数，以后<span
lang=EN-US>t</span>个分量存各非零元素的行值、列值、元素值），比二维数组节省存储单元；但在求Σ<span lang=EN-US>a<sub>ii</sub>(1&lt;=i&lt;=n)</span>时，要扫描整个三元组表，以便找到行列值相等的非零元素求和，其时间性能比采用二维数组时差。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>16. </span><span
style='mso-hansi-font-family:宋体'>特殊矩阵指值相同的元素或零元素在矩阵中的分布有一定规律，因此可以对非零元素分配单元（对值相同元素只分配一个单元），将非零元素存储在向量中，元素的下标<span
lang=EN-US>i</span>和<span lang=EN-US>j</span>和该元素在向量中的下标有一定规律，可以用简单公式表示，仍具有随机存取功能。而稀疏矩阵是指非零元素和矩阵容量相比很小（<span
lang=EN-US>t&lt;&lt;m*n</span>），且分布没有规律。用十字链表作存储结构自然失去了随机存取的功能。即使用三元组表的顺序存储结构，存取下标为<span
lang=EN-US>i</span>和<span lang=EN-US>j</span>的元素时，要扫描三元组表，下标不同的元素，存取时间也不同，最好情况下存取时间为<span
lang=EN-US>O(1)</span>，最差情况下是<span lang=EN-US>O(n)</span>，因此也失去了随机存取的功能。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>17</span><span
style='mso-hansi-font-family:宋体'>．一维数组属于特殊的顺序表，和有序表的差别主要在于有序表中元素按值排序（非递增或非递减），而一维数组中元素没有按元素值排列顺序的要求。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>18</span><span
style='mso-hansi-font-family:宋体'>．<span lang=EN-US>n(n+1)/2</span>（压缩存储）<span
lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>或<span
lang=EN-US>n<sup>2</sup></span>（不采用压缩存储）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>19</span><span style='font-family:宋体'>．<span lang=EN-US>LOC</span>（<span
lang=EN-US>A[i,j]</span>）<span lang=EN-US>=LOC</span>（<span lang=EN-US>A[3</span>，<span
lang=EN-US>2]</span>）<span lang=EN-US>+[</span>（<span lang=EN-US>i-3</span>）<span
lang=EN-US>*5+</span>（<span lang=EN-US>j-2</span>）<span lang=EN-US>]</span>×<span
lang=EN-US>2<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>（按行存放）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>LOC</span><span
style='font-family:宋体'>（<span lang=EN-US>A[i,j]</span>）<span lang=EN-US>=LOC</span>（<span
lang=EN-US>A[3</span>，<span lang=EN-US>2]</span>）<span lang=EN-US>+[</span>（<span
lang=EN-US>j-2</span>）<span lang=EN-US>*6+</span>（<span lang=EN-US>i-3</span>）<span
lang=EN-US>]</span>×<span lang=EN-US>2<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>（按列存放）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>20</span><span
style='mso-hansi-font-family:宋体'>．<span lang=EN-US>n</span>阶下三角矩阵元素<span
lang=EN-US>A[i][j]</span>（<span lang=EN-US>1&lt;=i,j&lt;=n,i&gt;=j</span>）。第<span
lang=EN-US>1</span>列有<span lang=EN-US>n</span>个元素，第<span lang=EN-US>j</span>列有<span
lang=EN-US>n-j+1</span>个元素，第<span lang=EN-US>1</span>列到第<span lang=EN-US>j-1</span>列是等腰梯形，元素数为<span
lang=EN-US>(n+(n-j+2)(j-1)/2</span>，而<span lang=EN-US>a<sub>ij</sub></span>在第<span
lang=EN-US>j</span>列上的位置是为<span lang=EN-US>i-j+1</span>。所以<span lang=EN-US>n</span>阶下三角矩阵<span
lang=EN-US>A</span>按列存储，其元素<span lang=EN-US>a<sub>ij</sub></span>在一维数组<span
lang=EN-US>B</span>中的存储位置<span lang=EN-US>k</span>与<span lang=EN-US>i</span>和<span
lang=EN-US>j</span>的关系为：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:21.0pt'><span lang=EN-US
style='mso-hansi-font-family:宋体'>k=(n+(n-(j-1)+1)(j-1)/2+(i-j+1)=(2n-j)(j-1)/2+i<o:p></o:p></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>21</span><span
style='mso-hansi-font-family:宋体'>．三对角矩阵第一行和最后一行各有两个非零元素，其余每行均有三个非零元素，所以共有<span
lang=EN-US>3n-2</span>个元素。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:11.1pt;mso-char-indent-count:1.0'><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）主对角线左下对角线上的元素下标间有<span
lang=EN-US>i=j+1</span>关系，<span lang=EN-US>k</span>与<span lang=EN-US>i</span>和<span
lang=EN-US>j</span>的关系为<span lang=EN-US>k=3(i-1);</span>主对角线上元素下标间有关系<span
lang=EN-US>i=j</span>，<span lang=EN-US>k</span>与<span lang=EN-US>i</span>和<span
lang=EN-US>j</span>的关系为<span lang=EN-US>k=3(i-1)+1; </span>主对角线右上那条对角线上元素下标间有关系<span
lang=EN-US>i=j-1</span>，<span lang=EN-US>k</span>与<span lang=EN-US>i</span>和<span
lang=EN-US>j</span>的关系为<span lang=EN-US>k=3(i-1)+2</span>。综合以上三等式，有<span
lang=EN-US>k=2(i-1)+j<span style='mso-spacerun:yes'>&nbsp;
</span>(1&lt;=i,j&lt;=n, |i-j|&lt;=1)<o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:11.1pt;mso-char-indent-count:1.0'><span
style='font-family:宋体'>（<span lang=EN-US>2</span>）<span lang=EN-US>i=k/3+1</span>；
（<span lang=EN-US>1≤k≤3n-2</span>） <span lang=EN-US>// k/3</span>取小于<span
lang=EN-US>k/3</span>的最大整数。下同<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:37.95pt;mso-char-indent-count:3.42'><span
lang=EN-US style='font-family:宋体'>j=k-2</span><span lang=EN-US>(</span><span
lang=EN-US style='font-family:宋体'>i-1)=k-2(k/3)</span><span lang=EN-US>=</span><span
lang=EN-US style='font-family:宋体'>k%3+k/3<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>22</span><span
style='font-family:宋体'>．这是一个递归调用问题，运行结果为：<span lang=EN-US>DBHEAIFJCKGL<o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>23.</span><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>1</span>）<span lang=EN-US>FOR</span>循环中，每次执行<span
lang=EN-US>PerfectShuffle(A,N)</span>和<span lang=EN-US>CompareExchange(A,N)</span>的结果：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:33.25pt;mso-para-margin-left:3.0gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span style='mso-hansi-font-family:
宋体'>第<span lang=EN-US>1</span>次：<span lang=EN-US>A[1..8]=[90,30,85,65,50,80,10,100]<o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:33.25pt;mso-para-margin-left:3.0gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span>A[1..8]=[30,90,65,85,50,80,10,100]<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:33.25pt;mso-para-margin-left:3.0gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span style='mso-hansi-font-family:
宋体'>第<span lang=EN-US>2</span>次：<span lang=EN-US>A[1..8]=[30,50,90,80,65,10,85,100]<o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:33.25pt;mso-para-margin-left:3.0gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span>A[1..8]=[30,50,80,90,10,65,85,100]<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:33.25pt;mso-para-margin-left:3.0gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span style='mso-hansi-font-family:
宋体'>第<span lang=EN-US>3</span>次：<span lang=EN-US>A[1..8]=[30,10,50,65,80,85,90,100]<o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:33.25pt;mso-para-margin-left:3.0gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span>A[1..8]=[10,30,50,65,80,85,90,100]<o:p></o:p></span></p>

<p class=MsoPlainText style='text-indent:16.65pt;mso-char-indent-count:1.5'><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>2</span>）<span lang=EN-US>Demo</span>的功能是将数组<span
lang=EN-US>A</span>中元素按递增顺序排序。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='text-indent:16.65pt;mso-char-indent-count:1.5'><span
style='mso-hansi-font-family:宋体'>（<span lang=EN-US>3</span>）<span lang=EN-US>PerfectShuffle
</span>中<span lang=EN-US>WHILE</span>循环内是赋值语句，共<span lang=EN-US>2N</span>次，<span
lang=EN-US>WHILE</span>外成组赋值语句，相当<span lang=EN-US>2N</span>个简单赋值语句；<span
lang=EN-US>CompareExchange</span>中<span lang=EN-US>WHILE</span>循环内是交换语句，最好情况下不发生交换，最差情况下发生<span
lang=EN-US>N</span>次交换，相当于<span lang=EN-US>3N</span>个赋值语句；<span lang=EN-US>Demo</span>中<span
lang=EN-US>FOR</span>循环循环次数<span lang=EN-US>log<sub>2</sub>2N</span>，故按赋值语句次数计算<span
lang=EN-US>Demo</span>的时间复杂度为：最好情况：<span lang=EN-US>O(4N*log<sub>2</sub>2N)</span>≈<span
lang=EN-US>O(Nlog(2*N))</span>；最差情况：<span lang=EN-US>O((4N+3N)*log<sub>2</sub>2N)</span>≈<span
lang=EN-US>O(Nlog(2*N))</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>24. </span><span
style='mso-hansi-font-family:宋体'>这是一个排序程序。运行后<span lang=EN-US>B</span>数组存放<span
lang=EN-US>A</span>数组各数在排序后的位置。结果是：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText style='margin-left:16.65pt;mso-para-margin-left:1.5gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'>A={121,22,323,212,636,939,828,424,55,262}
<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:16.65pt;mso-para-margin-left:1.5gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'>B={3,1,6,4,8,10,9,7,2,5}<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:16.65pt;mso-para-margin-left:1.5gd'><span
lang=EN-US style='mso-hansi-font-family:宋体'>C={22,55,121,212,262,323,424,639,828,939}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:39.0pt 158.3pt'><span lang=EN-US
style='font-family:宋体'>25.</span><span style='font-family:宋体'>（<span
lang=EN-US>1</span>）<span lang=EN-US>c=<sub><!--[if gte vml 1]><v:shape id="_x0000_i1028"
 type="#_x0000_t75" style='width:53.25pt;height:56.25pt' o:ole="">
 <v:imagedata src="da05.files/image007.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=71 height=75
src="da05.files/image008.gif" v:shapes="_x0000_i1028"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1028"
  DrawAspect="Content" ObjectID="_1149856337">
 </o:OLEObject>
</xml><![endif]--><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>（<span
lang=EN-US>2</span>）<span lang=EN-US>a=<sub><!--[if gte vml 1]><v:shape id="_x0000_i1029"
 type="#_x0000_t75" style='width:51.75pt;height:56.25pt' o:ole="">
 <v:imagedata src="da05.files/image009.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=69 height=75
src="da05.files/image010.gif" v:shapes="_x0000_i1029"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1029"
  DrawAspect="Content" ObjectID="_1149856341">
 </o:OLEObject>
</xml><![endif]--><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt 210.45pt'><span lang=EN-US
style='font-family:宋体'>26.</span><span style='font-family:宋体'>（<span
lang=EN-US>1</span>）同上面<span lang=EN-US style='color:red'>26</span>题（<span
lang=EN-US>1</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:宋体'>（<span
lang=EN-US>2</span>）对<span lang=EN-US>c</span>数组的赋值同所选择的下标<span lang=EN-US>i</span>和<span
lang=EN-US>j</span>的次序（指外层循环用<span lang=EN-US>j</span>内层用<span lang=EN-US>i</span>）没有关系<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:16.65pt;mso-char-indent-count:1.5;
tab-stops:39.0pt'><span style='font-family:宋体'>（<span lang=EN-US>3</span>）同上题<span
lang=EN-US style='color:red'>26</span>（<span lang=EN-US>2</span>）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:宋体'>（<span
lang=EN-US>4</span>）对<span lang=EN-US>i,j</span>下标取反序后，重复执行第（<span lang=EN-US>3</span>）步，<span
lang=EN-US>A</span>数组所有元素均变为<span lang=EN-US>2</span>。（在机器上验证，反复循环<span
lang=EN-US>3</span>次后，所有元素均变为<span lang=EN-US>2</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>27</span><span style='font-family:宋体'>．错误有以下几处：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span style='font-family:宋体'>（<span lang=EN-US>1</span>）过程参数没有类型说明；</span>
<span style='font-family:宋体'>（<span lang=EN-US>2</span>）出错条件判断：缺少<span
lang=EN-US>OR</span>（<span lang=EN-US>i+k&gt;last</span></span><span
lang=EN-US>+</span><span lang=EN-US style='font-family:宋体'>1</span><span
style='font-family:宋体'>）；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span style='font-family:宋体'>（<span lang=EN-US>3</span>）删除元素时<span
lang=EN-US>FOR</span>循环应正向，不应用反向<b style='mso-bidi-font-weight:normal'><span
lang=EN-US>DOWNTO</span></b>；</span> <span style='font-family:宋体'>（<span
lang=EN-US>4</span>）<span lang=EN-US>count</span>没定义；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:27.75pt;mso-char-indent-count:2.5;tab-stops:54.0pt'><span
style='font-family:宋体'>低效体现在两处：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span style='font-family:宋体'>（<span lang=EN-US>1</span>）删除<span
lang=EN-US>k</span>个元素时，不必一个一个元素前移，而应一次前移<span lang=EN-US>k</span>个位置；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span style='font-family:宋体'>（<span lang=EN-US>2</span>）<span
lang=EN-US>last</span>指针不应一次减<span lang=EN-US>1</span>，而应最后一次减<span lang=EN-US>k</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0;
tab-stops:54.0pt'><span style='font-family:宋体'>正确的高效算法如下：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'>const<span
style='mso-spacerun:yes'>&nbsp; </span>m=64</span><span style='font-family:
宋体'>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>TYPE</span></b><span lang=EN-US style='font-family:宋体'>
ARR=ARRAY[1..m] OF integer</span><span style='font-family:宋体'>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>PROCEDURE</span></b><span lang=EN-US style='font-family:
宋体'> delk</span><span style='font-family:宋体'>（<b style='mso-bidi-font-weight:
normal'><span lang=EN-US>VAR</span></b><span lang=EN-US> A:ARR</span>；<b
style='mso-bidi-font-weight:normal'><span lang=EN-US>VAR</span></b><span
lang=EN-US> last:integer;i,k</span>：<span lang=EN-US>integer</span>）；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span>{</span><span style='font-family:宋体'>从数组<span
lang=EN-US>A[1..last]</span>中删除第<span lang=EN-US>i</span>个元素起的<span lang=EN-US>k</span>个元素，<span
lang=EN-US>m</span>为<span lang=EN-US>A</span>的上限<span lang=EN-US>}<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>VAR</span></b><span lang=EN-US style='font-family:宋体'>
count</span><span style='font-family:宋体'>：<span lang=EN-US>integer</span>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>BEGIN</span></b><span lang=EN-US style='font-family:
宋体'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span>IF</span><span style='font-family:宋体'>（<span
lang=EN-US>i&lt;0</span>）<b style='mso-bidi-font-weight:normal'><span
lang=EN-US>OR</span></b>（<span lang=EN-US>i&gt;last</span>）<b style='mso-bidi-font-weight:
normal'><span lang=EN-US>OR</span></b>（<span lang=EN-US>k&lt;0</span>）<span
lang=EN-US>OR</span>（<span lang=EN-US>last&gt;m</span>）<b style='mso-bidi-font-weight:
normal'><span lang=EN-US>OR</span></b>（<span lang=EN-US>i+k&gt;last+1</span>）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt;tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:宋体'>THEN</span></b><span lang=EN-US
style='font-family:宋体'> write</span><span style='font-family:宋体'>（’<span
lang=EN-US>error</span>’）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span><span style='mso-spacerun:yes'>&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span><b style='mso-bidi-font-weight:
normal'>ELSE</b>[<b style='mso-bidi-font-weight:normal'>FOR</b> count</span><span
style='font-family:宋体'>：<span lang=EN-US>= i+k <b style='mso-bidi-font-weight:
normal'>TO</b> last <b style='mso-bidi-font-weight:normal'>DO</b><span
style='mso-spacerun:yes'>&nbsp; </span>A[count-k]</span>：<span lang=EN-US>=A[count]</span>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:48.35pt;mso-char-indent-count:4.36;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>last</span><span style='font-family:宋体'>：<span
lang=EN-US>=last-k</span>；<span lang=EN-US>]<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>END</span></b><span style='font-family:宋体'>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span lang=EN-US style='mso-hansi-font-family:宋体'>28. </span><span
style='mso-hansi-font-family:宋体'>这是计数排序程序。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>a</span>）<span
lang=EN-US>c[i](1&lt;=i&lt;=n)</span>中存放<span lang=EN-US>A</span>数组中值为<span
lang=EN-US>i</span>的元素个数。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>b</span>）<span
lang=EN-US>c[i](1&lt;=i&lt;=n)</span>中存放<span lang=EN-US>A</span>数组中小于等于<span
lang=EN-US>i</span>的个数。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>c</span>）<span
lang=EN-US>B</span>中存放排序结果，<span lang=EN-US>B[1..n]</span>已经有序。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoPlainText><span style='mso-hansi-font-family:宋体'>（<span lang=EN-US>d</span>）算法中有<span
lang=EN-US>4</span>个并列<span lang=EN-US>for</span>循环语句，算法的时间复杂度为<span
lang=EN-US>O(n)</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'>29</span><span style='font-family:宋体'>．上三角矩阵第一行有<span lang=EN-US>n</span>个元素，第<span
lang=EN-US>i-1</span>行有<span lang=EN-US>n-</span>（<span lang=EN-US>i-1</span>）<span
lang=EN-US>+1</span>个元素，第一行到第<span lang=EN-US>i-1</span>行是等腰梯形，而第<span
lang=EN-US>i</span>行上第<span lang=EN-US>j</span>个元素（即<span lang=EN-US>a<sub>ij</sub></span>）是第<span
lang=EN-US>i</span>行上第<span lang=EN-US>j-i+1</span>个元素，故元素<span lang=EN-US>A<sub>ij</sub></span>在一维数组中的存储位置（下标<span
lang=EN-US>k</span>）为：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span>k=(n+(n-(i-1)+1))(i-1)/2+(j-i+1)=(2n-i+2)(i-1)/2+j-i+1<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'>30</span><span style='font-family:宋体'>．将上面<span lang=EN-US>29</span>题的等式进一步整理为：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>k=</span><span
style='font-family:宋体'>（<span lang=EN-US>n+1/2</span>）<span lang=EN-US>i-i<sup>2</sup>/2+j-n</span>，<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:宋体'>则得<span lang=EN-US>f<sub>1</sub></span>（<span
lang=EN-US>i</span>）<span lang=EN-US>=</span>（<span lang=EN-US>n+1/2</span>）<span
lang=EN-US>i-i<sup>2</sup>/2</span>，<span lang=EN-US>f<sub>2</sub></span>（<span
lang=EN-US>j</span>）<span lang=EN-US>=j</span>，<span lang=EN-US>c=-n</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>31.</span><span
style='font-family:宋体'>（<span lang=EN-US>1</span>）将对称矩阵对角线及以下元素按行序存入一维数组中，结果如下：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:77.65pt;mso-char-indent-count:7.0'><span
lang=EN-US style='font-family:宋体'><!--[if gte vml 1]><v:shape id="_x0000_i1030"
 type="#_x0000_t75" style='width:171.75pt;height:36pt' o:ole="">
 <v:imagedata src="da05.files/image011.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=229 height=48
src="da05.files/image012.jpg" v:shapes="_x0000_i1030"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="PBrush" ShapeID="_x0000_i1030"
  DrawAspect="Content" ObjectID="_1149856345">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span></span><span style='font-family:
宋体'>（<span lang=EN-US>2</span>）因行列表头的“行列域”值用了<span lang=EN-US>0</span>和<span
lang=EN-US>0</span>，下面十字链表中行和列下标均从<span lang=EN-US>1</span>开始。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><!--[if gte vml 1]><v:shape
 id="_x0000_i1031" type="#_x0000_t75" style='width:392.25pt;height:243pt'
 o:ole="">
 <v:imagedata src="da05.files/image013.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=523 height=324
src="da05.files/image014.jpg" v:shapes="_x0000_i1031"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="PBrush" ShapeID="_x0000_i1031"
  DrawAspect="Content" ObjectID="_1149856346">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:33.25pt;mso-char-indent-count:3.0'><span
style='font-family:宋体'>注：上侧列表头<span lang=EN-US>H<sub>i</sub></span>和左侧行表头<span
lang=EN-US>H<sub>i</sub></span>是一个（即<span lang=EN-US>H<sub>1</sub></span>、<span
lang=EN-US>H<sub>2</sub></span>、<span lang=EN-US>H3</span>和<span lang=EN-US>H<sub>4</sub></span>），为了清楚，画成了两个。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>32.</span><span
style='font-family:宋体'>（<span lang=EN-US>1</span>）<span lang=EN-US
style='color:red'>k=(2n-j+2)(j-1)/2+i-j+1 <span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span></span><span
style='color:red'>（当<span lang=EN-US>i≥j</span>时，本题<span lang=EN-US>n=4</span>）<span
lang=EN-US><o:p></o:p></span></span></span></p>

<p class=MsoNormal style='tab-stops:44.55pt'><span lang=EN-US style='font-family:
宋体;color:red'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>k=(2n-i+2)(i-1)/2+j-i+1
<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span></span><span
style='font-family:宋体;color:red'>（当<span lang=EN-US>i&lt;j</span>时，本题<span
lang=EN-US>n=4</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span></span><span style='font-family:
宋体'>（<span lang=EN-US>2</span>）稀疏矩阵的三元组表为：<span lang=EN-US>s=((4,4,6),(1,1,1),(1,4,2),(2,2,3),(3,4,5),(4,1,2),(4,3,5)</span>。其中第一个三元组是稀疏矩阵行数、列数和非零元素个数。其它三元组均为非零元素行值、列值和元素值。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'>33.</span><span style='font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>k=2</span>（<span lang=EN-US>i-1</span>）<span lang=EN-US>+j<span
style='mso-spacerun:yes'>&nbsp; </span></span>（<span lang=EN-US>1≤i</span>，<span
lang=EN-US>j≤n</span>，<span lang=EN-US>|i-j|≤1</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:37.5pt;tab-stops:39.0pt'><span
lang=EN-US style='font-family:宋体'>i=floor</span><span style='font-family:宋体'>（<span
lang=EN-US>k/3</span>）<span lang=EN-US>+1<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>// floor</span>（<span lang=EN-US>a</span>）是取小于等于<span
lang=EN-US>a</span>的最大整数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:37.5pt;tab-stops:39.0pt'><span
lang=EN-US style='font-family:宋体'>j=k-2</span><span style='font-family:宋体'>（<span
lang=EN-US>i-1</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:37.5pt;tab-stops:39.0pt'><span
style='font-family:宋体'>推导过程见上面第<span lang=EN-US>25</span>题。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span></span><span style='font-family:
宋体'>（<span lang=EN-US>2</span>）行逻辑链接顺序表是稀梳矩阵压缩存储的一种形式。为了随机存取任意一行的非零元，需要知道每一行第一个非零元在三元组表中的位置。为此，除非零元的三元组表外，还需要一个向量，其元素值是每行第一个非零元在三元组表中的位置。其类型定义如下：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>typedef struct</b><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>{ <b style='mso-bidi-font-weight:normal'>int</b> mu,nu,tu;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>//</span><span
style='font-family:宋体'>稀梳矩阵的行数、列数和非零元素个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>int</b> rpos[maxrow+1];<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>行向量，其元素值是每行第一个非零元在三元组表中的位置。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Triple data[maxsize];<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}SparsMatrix;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:38.7pt;mso-char-indent-count:3.49;
tab-stops:39.0pt'><span style='font-family:宋体'>因篇幅所限，不再画出行逻辑链接顺序表。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'>34</span><span style='font-family:宋体'>．各维的元素数为<span lang=EN-US>d<sub>i</sub>-c<sub>i</sub>+1</span>，则<span
lang=EN-US>a[i<sub>1</sub></span>，<span lang=EN-US>i<sub>2</sub></span>，<span
lang=EN-US>i<sub>3</sub>]</span>的地址为：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0;
tab-stops:39.0pt'><span lang=EN-US style='font-family:宋体'>a<sub>0</sub>+[</span><span
style='font-family:宋体'>（<span lang=EN-US>i<sub>1</sub>-c<sub>1</sub></span>）（<span
lang=EN-US>d<sub>3</sub>- c<sub>3</sub>+1</span>）（<span lang=EN-US>d<sub>2</sub>-
c<sub>2</sub>+1</span>）<span lang=EN-US>+</span>（<span lang=EN-US>i<sub>2</sub>-c<sub>2</sub></span>）（<span
lang=EN-US>d<sub>2</sub>- c<sub>2</sub>+1</span>）<span lang=EN-US>+</span>（<span
lang=EN-US>i<sub>3</sub>-c<sub>3</sub></span>）<span lang=EN-US>]*L<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'>35</span><span style='font-family:宋体'>．主对角线上元素的坐标是<span lang=EN-US>i=j</span>，副对角线上元素的坐标<span
lang=EN-US>i</span>和<span lang=EN-US>j</span>有<span lang=EN-US>i+j=n+1</span>的关系<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:
宋体'>（<span lang=EN-US>1</span>）<span lang=EN-US>i=j</span>或<span lang=EN-US>i=n+1-j<span
style='mso-spacerun:yes'>&nbsp; </span></span>（<span lang=EN-US>1≤i</span>，<span
lang=EN-US>j≤n</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><b><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span></span></b><span
style='font-family:宋体'>（<span lang=EN-US>2</span>）非零元素分布在两条主、副对角线上，除对角线相交处一个元素（下称“中心元素”）外，其余每行都有两个元素。主对角线上的元素，在向量<span
lang=EN-US>B</span>中存储的下标是<span lang=EN-US>k=2i-1(i=j, 1≤i</span>，<span
lang=EN-US>j≤n</span>，<span lang=EN-US>1&lt;=k&lt;=2n-1)</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0;
tab-stops:39.0pt'><span style='font-family:宋体'>副对角线上的元素，在中心元素前，在向量<span
lang=EN-US>B</span>中存储的下标是<span lang=EN-US>k=2i(i&lt;&gt;j, 1≤i</span>，<span
lang=EN-US>j≤n/2)</span>；在中心元素后，其下标是<span lang=EN-US>k=2(i-1)(i&lt;&gt;j</span>，<span
lang=EN-US>n/2+1≤i</span>，<span lang=EN-US>j≤n, 1&lt;=k&lt;=2n-1)</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:
宋体'>（<span lang=EN-US>3</span>）<span lang=EN-US>a<sub>ij</sub></span>在<span
lang=EN-US>B</span>中的位置<span lang=EN-US>K=<sub><!--[if gte vml 1]><v:shape
 id="_x0000_i1032" type="#_x0000_t75" style='width:212.25pt;height:56.25pt'
 o:ole="">
 <v:imagedata src="da05.files/image015.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=283 height=75
src="da05.files/image016.gif" v:shapes="_x0000_i1032"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1032"
  DrawAspect="Content" ObjectID="_1149856347">
 </o:OLEObject>
</xml><![endif]--> <o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
font-family:宋体'>36. </span><span style='mso-bidi-font-size:10.5pt;font-family:
宋体'>由于对称矩阵采用压缩存储，上三角矩阵第一列一个元素，第二列两个元素，第<span lang=EN-US>j</span>列<span
lang=EN-US>j</span>个元素。上三角矩阵共有<span lang=EN-US>n (n+1)/2</span>个元素。我们将这些元素存储到一个向量<span
lang=EN-US>B[n(n+1)/2+1]</span>中。可以看到<span lang=EN-US>B[k]</span>和矩阵中的元素<span
lang=EN-US>a<sub>ij</sub></span>之间存在着一一对应关系：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=right style='text-align:right;text-indent:44.35pt;
mso-char-indent-count:4.0;word-break:break-all'><span lang=EN-US
style='mso-bidi-font-size:10.5pt;font-family:宋体'><!--[if gte vml 1]><v:shape
 id="_x0000_i1033" type="#_x0000_t75" style='width:140.25pt;height:62.25pt'
 o:ole="">
 <v:imagedata src="da05.files/image017.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=187 height=83
src="da05.files/image018.gif" v:shapes="_x0000_i1033"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1033"
  DrawAspect="Content" ObjectID="_1149856351">
 </o:OLEObject>
</xml><![endif]--><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:10.5pt;font-family:宋体'>则其对应关系可表示为：<span
lang=EN-US>k=<sub><!--[if gte vml 1]><v:shape id="_x0000_i1034" type="#_x0000_t75"
 style='width:186.75pt;height:30.75pt' o:ole="">
 <v:imagedata src="da05.files/image019.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=249 height=41
src="da05.files/image020.gif" v:shapes="_x0000_i1034"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1034"
  DrawAspect="Content" ObjectID="_1149856355">
 </o:OLEObject>
</xml><![endif]--> ( 1&lt;=i,j&lt;=n,<span style='mso-spacerun:yes'>&nbsp;
</span>1&lt;=k&lt;=<span style='color:red'>n(n+1)/2</span>) <o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>int MAX(int
x,int y)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US
style='mso-bidi-font-size:10.5pt;font-family:宋体'>{ <b style='mso-bidi-font-weight:
normal'>return</b>(x&gt;y?x:y);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US
style='mso-bidi-font-size:10.5pt;font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:11.1pt;mso-char-indent-count:1.0'><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'>int MIN(int x,int
y)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US
style='mso-bidi-font-size:10.5pt;font-family:宋体'>{ <b style='mso-bidi-font-weight:
normal'>return</b>(x&lt;y?x:y);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US
style='mso-bidi-font-size:10.5pt;font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:39.0pt'><span lang=EN-US>37. </span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>设用</span><span lang=EN-US>mu,nu</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>和</span><span lang=EN-US>tu</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>表示稀疏矩阵行数，列数和非零元素个数，则转置矩阵的行数，列数和非零元素的个数分别是</span><span
lang=EN-US>nu,mu</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>和</span><span lang=EN-US>tu</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>。转置可按转置矩阵的三元组表中的元素顺序进行，即按稀疏矩阵的列序，从第</span><span lang=EN-US>1</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>列到第</span><span lang=EN-US>nu</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>列，每列中按行值递增顺序，找出非零元素，逐个放入转置矩阵的三元组表中，转时行列值互换，元素值复制。按这种方法，第</span><span
lang=EN-US>1</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>列到第</span><span lang=EN-US>1</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>个非零元素一定是转置后矩阵的三元组表中的第</span><span lang=EN-US>1</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>个元素，第</span><span lang=EN-US>1</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>列非零元素在第</span><span
lang=EN-US>2</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>列非零元素的前面。这种方法时间复杂度是</span><span
lang=EN-US>O(n*P)</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>，其中</span><span lang=EN-US>p</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>是非零元素个数，当</span><span lang=EN-US>p</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>和</span><span lang=EN-US>m*n</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>同量级时，时间复杂度为</span><span
lang=EN-US>O(n<sup>3</sup>)</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>。</span></p>

<p class=MsoPlainText style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
style='mso-hansi-font-family:宋体'>另一种转置方法称作快速转置，使时间复杂度降为<span lang=EN-US>O(m*n)</span>。它是按稀疏矩阵三元组表中元素的顺序进行。按顺序取出一个元素，放到转置矩阵三元组表的相应位置。这就要求出每列非零元素个数和每列第一个非零元素在转置矩阵三元组表中的位置，设置了两个附加向量。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>38. </span><span style='font-family:宋体'>广义表中的元素，可以是原子，也可以是子表，即广义表是原子或子表的有限序列，满足线性结构的特性：在非空线性结构中，只有一个称为“第一个”的元素，只有一个成为“最后一个”的元素，第一元素有后继而没有前驱，最后一个元素有前驱而没有后继，其余每个元素有唯一前驱和唯一后继。从这个意义上说，广义表属于线性结构。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>39. </span><span style='font-family:宋体'>数组是具有相同性质的数据元素的集合，同时每个元素又有唯一下标限定，可以说数组是值和下标偶对的有限集合。<span
lang=EN-US>n</span>维数组中的每个元素，处于<span lang=EN-US>n</span>个关系之中，每个关系都是线性的，且<span
lang=EN-US>n</span>维数组可以看作其元素是<span lang=EN-US>n-1</span>维数组的一个线性表。而广义表与线性表的关系，见上面<span
lang=EN-US>38</span>题的解释。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>40</span><span style='font-family:宋体'>．线性表中的元素可以是各种各样的，但必须具有相同性质，属于同一数据对象。广义表中的元素可以是原子，也可以是子表。其它请参见<span
lang=EN-US>38<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>41.</span><span style='font-family:宋体'>（<span lang=EN-US>1</span>）（<span
lang=EN-US>c,d</span>）<span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span></span>（<span lang=EN-US>2</span>）（<span lang=EN-US>b</span>）<span
lang=EN-US><span style='mso-spacerun:yes'>&nbsp; </span></span>（<span
lang=EN-US>3</span>）<span lang=EN-US>b<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>（<span lang=EN-US>4</span>）（<span
lang=EN-US>f</span>）<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>（<span lang=EN-US>5</span>）（）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>42. Head</span><span style='font-family:宋体'>（<span lang=EN-US>Tail</span>（<span
lang=EN-US>Head</span>（<span lang=EN-US>Head</span>（<span lang=EN-US>L1</span>））））<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>Head</span><span style='font-family:宋体'>（<span
lang=EN-US>Head</span>（<span lang=EN-US>Head</span>（<span lang=EN-US>Tail</span>（<span
lang=EN-US>Head</span>（<span lang=EN-US>Tail</span>（<span lang=EN-US>L2</span>））））））<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span style='font-family:宋体'>类似本题的另外叙述的几个题解答如下：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span style='font-family:宋体'>（<span
lang=EN-US>1</span>）<span lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>tail</span>（<span lang=EN-US>L</span>）））），设<span
lang=EN-US>L=</span>（<span lang=EN-US>a</span>，（<span lang=EN-US>c</span>），<span
lang=EN-US>b</span>），（（（<span lang=EN-US>e</span>））））<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><!--[if gte vml 1]><v:shape id="_x0000_s1044"
 type="#_x0000_t75" style='position:absolute;left:0;text-align:left;
 margin-left:0;margin-top:22.9pt;width:278.25pt;height:149.25pt;z-index:1;
 mso-position-horizontal:left'>
 <v:imagedata src="da05.files/image021.png" o:title=""/>
 <w:wrap type="square" side="right"/>
</v:shape><![if gte mso 9]><o:OLEObject Type="Embed" ProgID="PBrush"
 ShapeID="_x0000_s1044" DrawAspect="Content" ObjectID="_1149856359">
</o:OLEObject>
<![endif]><![endif]--><![if !vml]><img width=371 height=199
src="da05.files/image022.jpg" align=left hspace=12 v:shapes="_x0000_s1044"><![endif]><span
style='font-family:宋体'>（<span lang=EN-US>2</span>）<span lang=EN-US>head</span>（<span
lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>tail</span>（<span lang=EN-US>L</span>））））））<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><br clear=all style='mso-special-character:line-break'>
<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span style='font-family:宋体'>（<span
lang=EN-US>3</span>）<span lang=EN-US>head</span>（<span lang=EN-US>tail</span>（<span
lang=EN-US>head</span>（<span lang=EN-US>tail</span>（<span lang=EN-US>A</span>））））<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span style='font-family:宋体'>（<span
lang=EN-US>4</span>）<span lang=EN-US>H</span>（<span lang=EN-US>H</span>（<span
lang=EN-US>T</span>（<span lang=EN-US>H</span>（<span lang=EN-US>T</span>（<span
lang=EN-US>H</span>（<span lang=EN-US>T</span>（<span lang=EN-US>L</span>）））））））<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span style='font-family:宋体'>（<span
lang=EN-US>5</span>）<span lang=EN-US>tail</span>（<span lang=EN-US>L</span>）<span
lang=EN-US>=</span>（（（<span lang=EN-US>c,d</span>）），（<span lang=EN-US>e,f</span>））<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>head</span><span style='font-family:宋体'>（<span
lang=EN-US>tail</span>（<span lang=EN-US>L</span>））<span lang=EN-US>=</span>（（<span
lang=EN-US>c,d</span>））<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>head</span><span style='font-family:宋体'>（<span
lang=EN-US>head</span>（<span lang=EN-US>tail</span>（<span lang=EN-US>L</span>）））<span
lang=EN-US>=</span>（<span lang=EN-US>c,d</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>tail</span><span style='font-family:宋体'>（<span
lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span lang=EN-US>tail</span>（<span
lang=EN-US>L</span>））））<span lang=EN-US>=</span>（<span lang=EN-US>d</span>）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>head</span><span style='font-family:宋体'>（<span
lang=EN-US>tail</span>（<span lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>L</span>）））））<span lang=EN-US>=d<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span style='font-family:宋体'>（<span
lang=EN-US>6</span>）<span lang=EN-US>head</span>（<span lang=EN-US>tail</span>（<span
lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span lang=EN-US>tail</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>A</span>））））））<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>43. </span><span style='font-family:宋体'>广义表的第一种存储结构的理论基础是，非空广义表可唯一分解成表头和表尾两部分，而由表头和表尾可唯一构成一个广义表。这种存储结构中，原子和表采用不同的结点结构（“异构”，即结点域个数不同）。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><!--[if gte vml 1]><v:shape id="_x0000_s1203"
 type="#_x0000_t75" style='position:absolute;left:0;text-align:left;
 margin-left:11.1pt;margin-top:2.9pt;width:482.25pt;height:114.75pt;z-index:4'>
 <v:imagedata src="da05.files/image023.png" o:title=""/>
</v:shape><![if gte mso 9]><o:OLEObject Type="Embed" ProgID="PBrush"
 ShapeID="_x0000_s1203" DrawAspect="Content" ObjectID="_1149856360">
</o:OLEObject>
<![endif]><![endif]--><![if !vml]><span style='mso-ignore:vglayout'>

<table cellpadding=0 cellspacing=0 align=left>
 <tr>
  <td width=15 height=4></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=643 height=153 src="da05.files/image024.jpg" v:shapes="_x0000_s1203"></td>
 </tr>
</table>

</span><![endif]><span lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<br style='mso-ignore:vglayout' clear=ALL>

<p class=MsoNormal style='tab-stops:54.0pt'><span style='font-family:宋体'>原子结点两个域：标志域<span
lang=EN-US>tag=0</span>表示原子结点，域<span lang=EN-US>DATA</span>表示原子的值；子表结点三个域：<span
lang=EN-US>tag=1</span>表示子表，<span lang=EN-US>hp</span>和<span lang=EN-US>tp</span>分别是指向表头和表尾的指针。在画存储结构时，对非空广义表不断进行表头和表尾的分解，表头可以是原子，也可以是子表，而表尾一定是表（包括空表）。上面是本题的第一种存储结构图。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:21.75pt;tab-stops:54.0pt'><span
style='font-family:宋体'>广义表的第二种存储结构的理论基础是，非空广义表最高层元素间具有逻辑关系：第一个元素无前驱有后继，最后一个元素无后继有前驱，其余元素有唯一前驱和唯一后继。有人将这种结构看作扩充线性结构。这种存储结构中，原子和表均采用三个域的结点结构（“同构”）。结点中都有一个指针域指向后继结点。原子结点中还包括标志域<span
lang=EN-US>tag=0</span>和原子值域<span lang=EN-US>DATA</span>；子表结点还包括标志域<span
lang=EN-US>tag=1</span>和指向子表的指针<span lang=EN-US>hp</span>。在画存储结构时，从左往右一个元素一个元素的画，直至最后一个元素。下面是本题的第二种存储结构图。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><!--[if gte vml 1]><v:shape id="_x0000_i1035" type="#_x0000_t75" style='width:414.75pt;
 height:104.25pt' o:ole="">
 <v:imagedata src="da05.files/image025.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=553 height=139
src="da05.files/image026.jpg" v:shapes="_x0000_i1035"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="PBrush" ShapeID="_x0000_i1035"
  DrawAspect="Content" ObjectID="_1149856361">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0;
tab-stops:54.0pt'><span style='font-family:宋体'>由于存储结构图占篇幅较大，下面这类题均不再解答。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>44.</span><span style='font-family:宋体'>深度为<span lang=EN-US>5</span>，长度为<span
lang=EN-US>2<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>45.</span><span style='font-family:宋体'>（<span lang=EN-US>1</span>）略<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:宋体'>（<span
lang=EN-US>2</span>）表的长度为<span lang=EN-US>5</span>，深度为<span lang=EN-US>4<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:宋体'>（<span
lang=EN-US>3</span>）<span lang=EN-US>head</span>（<span lang=EN-US>tail</span>（<span
lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span lang=EN-US>head</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>tail</span>（<span lang=EN-US>tail</span>（<span
lang=EN-US>tail</span>（<span lang=EN-US>A</span>）））））））））<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>46.</span><span style='font-family:宋体'>共享结构广义表<span lang=EN-US>A=</span>（（（<span
lang=EN-US>b,c</span>），<span lang=EN-US>d</span>），（<span lang=EN-US>a</span>），（（<span
lang=EN-US>a</span>），（（<span lang=EN-US>b,c</span>），<span lang=EN-US>d</span>）），<span
lang=EN-US>e</span>，（））的存储表示：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><!--[if gte vml 1]><v:shape id="_x0000_i1036" type="#_x0000_t75" style='width:414.75pt;
 height:101.25pt' o:ole="">
 <v:imagedata src="da05.files/image027.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=553 height=135
src="da05.files/image028.jpg" v:shapes="_x0000_i1036"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="PBrush" ShapeID="_x0000_i1036"
  DrawAspect="Content" ObjectID="_1149856362">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>47.</span><span style='font-family:宋体'>（<span lang=EN-US>1</span>）算法<span
lang=EN-US>A</span>的功能是逆置广义表<span lang=EN-US>p</span>（即广义表由<span lang=EN-US>p</span>指针所指）。逆置后的广义表由<span
lang=EN-US>t</span>指向。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:宋体'>（<span
lang=EN-US>2</span>）逆置后的广义表由<span lang=EN-US>t</span>指向，这时<span lang=EN-US>p=nil</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><!--[if gte vml 1]><v:shape id="_x0000_i1037" type="#_x0000_t75" style='width:437.25pt;
 height:93pt' o:ole="">
 <v:imagedata src="da05.files/image029.png" o:title="" cropbottom="9224f"/>
</v:shape><![endif]--><![if !vml]><img width=583 height=124
src="da05.files/image030.jpg" v:shapes="_x0000_i1037"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="PBrush" ShapeID="_x0000_i1037"
  DrawAspect="Content" ObjectID="_1149856363">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>48.</span><span style='font-family:宋体'>（<span lang=EN-US>a,b</span>）<span
lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>49.</span>（<span lang=EN-US>d</span>）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>50.</span><span style='font-family:宋体'>否。广义表的长度不是广义表中原子个数，而是指广义表中所含元素的个数，广义表中的元素可以是原子，也可以是子表。广义表元素多于<span
lang=EN-US>1</span>个时，元素间用逗号分开。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>51. p</span><span style='font-family:宋体'>（<span lang=EN-US>x<sub>1</sub> x<sub>2</sub>
x<sub>3</sub></span>）<span lang=EN-US>=2 x<sub>1</sub><sup>5</sup> x<sub>2</sub><sup>2</sup>
x<sub>3</sub><sup>4</sup>+5 x<sub>1</sub><sup>5</sup> x<sub>2</sub><sup>3</sup>
x<sub>3</sub><sup>3</sup>+3 x<sub>1</sub> x<sub>2</sub><sup>4</sup> x<sub>3</sub><sup>2</sup>+</span>（<span
lang=EN-US>x<sub>1</sub><sup>5</sup> x<sub>2</sub><sup>3</sup>+ x<sub>2</sub></span>）<span
lang=EN-US>x<sub>3</sub>+6<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><!--[if gte vml 1]><v:shape id="_x0000_s1202"
 type="#_x0000_t75" style='position:absolute;left:0;text-align:left;
 margin-left:22.95pt;margin-top:5.1pt;width:415.5pt;height:116.25pt;z-index:-2'>
 <v:imagedata src="da05.files/image031.png" o:title=""/>
</v:shape><![if gte mso 9]><o:OLEObject Type="Embed" ProgID="PBrush"
 ShapeID="_x0000_s1202" DrawAspect="Content" ObjectID="_1149856364">
</o:OLEObject>
<![endif]><![endif]--><![if !vml]><span style='mso-ignore:vglayout;position:
absolute;z-index:-2;left:0px;margin-left:31px;margin-top:7px;width:554px;
height:155px'><img width=554 height=155 src="da05.files/image032.jpg" v:shapes="_x0000_s1202"></span><![endif]><span
lang=EN-US style='font-family:宋体'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>52.</span><span style='font-family:宋体'>（<span lang=EN-US>1</span>）<span
lang=EN-US>H(A(a<sub>1</sub>,a<sub>2</sub></span>）<span lang=EN-US>,B(b<sub>1</sub></span>）<span
lang=EN-US>,C(c<sub>1</sub></span>，<span lang=EN-US>c<sub>2</sub></span>）<span
lang=EN-US>,x</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:37.5pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>HEAD(TAIL(HEAD(H</span><span
style='font-family:宋体'>）））<span lang=EN-US>=a<sub>2<o:p></o:p></sub></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span></span><span style='font-family:宋体'>（<span
lang=EN-US>2</span>）略<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><!--[if supportFields]><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'><span
style='mso-element:field-begin'></span><span
style='mso-spacerun:yes'>&nbsp;</span>= 5 \* CHINESENUM3 <span
style='mso-element:field-separator'></span></span><![endif]--><span
style='mso-bidi-font-size:10.5pt;font-family:宋体;mso-no-proof:yes'>五</span><!--[if supportFields]><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'><span
style='mso-element:field-end'></span></span><![endif]--><span lang=EN-US
style='mso-bidi-font-size:10.5pt;font-family:宋体'>.</span><span
style='mso-bidi-font-size:10.5pt;font-family:宋体'>算法设计题<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>1.[</span><span style='mso-bidi-font-size:10.5pt;
font-family:宋体'>题目分析<span lang=EN-US>]</span>本题是在向量<span lang=EN-US>D</span>内插入元素问题。首先要查找插入位置，数据<span
lang=EN-US>x</span>插入到第<span lang=EN-US>i</span>个数据组的末尾</span><span
style='font-family:宋体'>，即是第<span lang=EN-US>i+1</span>个数据组的开始，而第<span
lang=EN-US>i</span>（<span lang=EN-US>1≤i≤n</span>）个数据组的首地址由数组<span lang=EN-US>s</span>（即数组元素<span
lang=EN-US>s[i]</span>）给出。其次，数据<span lang=EN-US>x</span>插入后，还要维护数组<span
lang=EN-US>s</span>，以保持空间区<span lang=EN-US>D</span>和数组<span lang=EN-US>s</span>的正确的相互关系。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>void</span></b><span lang=EN-US style='font-family:宋体'> Insert</span><span
style='font-family:宋体'>（<b style='mso-bidi-font-weight:normal'><span
lang=EN-US>int</span></b><span lang=EN-US> s[]</span>，<span lang=EN-US>datatype
D[]</span>，<span lang=EN-US>x</span>，<b style='mso-bidi-font-weight:normal'><span
lang=EN-US>int</span></b><span lang=EN-US> i,m</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'>//</span><span
style='font-family:宋体'>在<span lang=EN-US>m</span>个元素的<span lang=EN-US>D</span>数据区的第<span
lang=EN-US>i</span>个数据组末尾，插入新数据<span lang=EN-US>x</span>，第<span lang=EN-US>i</span>个数据组的首址由数组<span
lang=EN-US>s</span>给出。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span style='font-family:宋体'>｛<b style='mso-bidi-font-weight:
normal'><span lang=EN-US>if</span></b>（<span lang=EN-US>i&lt;</span>１<span
lang=EN-US>|| i&gt;n</span>）｛<span lang=EN-US>printf</span>（“参数错误”）；<span
lang=EN-US>exit</span>（０）；｝<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span style='font-family:宋体'>　<b style='mso-bidi-font-weight:
normal'><span lang=EN-US>if</span></b>（<span lang=EN-US>i==n</span>）<span
lang=EN-US> D[m]=x</span>；<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp; </span>// </span>在第<span lang=EN-US>n</span>个数据组末尾插入元素。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span style='font-family:宋体'>　<b style='mso-bidi-font-weight:
normal'><span lang=EN-US>else</span></b>｛<b style='mso-bidi-font-weight:normal'><span
lang=EN-US>for</span></b>（<span lang=EN-US>j=m-1;j&gt;=s[i+1];j--</span>）<span
lang=EN-US>D[j+1]=D[j]; // </span>第<span lang=EN-US>i</span>＋１个数据组及以后元素后移<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:42.35pt;mso-char-indent-count:3.82;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>D[s[i+1]]=x;<span
style='mso-spacerun:yes'>&nbsp; </span>// </span><span style='font-family:宋体'>将新数据<span
lang=EN-US>x</span>插入<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><b
style='mso-bidi-font-weight:normal'>for</b>(j=i+1;j&lt;=n;j++) s[j]++;<span
style='mso-spacerun:yes'>&nbsp; </span>// </span><span style='font-family:宋体'>维护空间区<span
lang=EN-US>D</span>和数组<span lang=EN-US style='color:red'>s</span>的的关系。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span>}<span style='mso-spacerun:yes'>&nbsp;
</span>//</span><span style='font-family:宋体'>结束元素插入<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5;tab-stops:54.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>m++;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>//</span><span
style='font-family:宋体'>空间区<span lang=EN-US>D</span>的数据元素个数增<span lang=EN-US>1</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:11.1pt;mso-char-indent-count:1.0;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>}// </span><span style='font-family:宋体'>算法<span
lang=EN-US>Insert</span>结束<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:11.1pt;mso-char-indent-count:1.0;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'>[</span><span
style='font-family:宋体'>算法讨论<span lang=EN-US>] </span>数据在空间区从下标<span lang=EN-US>0</span>开始，最后一个元素的下标是<span
lang=EN-US>m-1</span>。设空间区容量足够大，未考虑空间溢出问题。数组<span lang=EN-US>s</span>随机存数，而向量<span
lang=EN-US>D</span>数据插入，引起数组元素移动，时间复杂度是<span lang=EN-US>O</span>（<span
lang=EN-US>n</span>）。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'>2. [</span><span style='font-family:宋体'>题目分析<span lang=EN-US>]</span>设稀疏矩阵的非零元素的三元组以行序为主存储在三元组表中。矩阵的相加是对应元素的相加。对两非零元素相加，若行号不等，则行号大者是结果矩阵中的非零元素。若行号相同，则列号大者是结果中一非零元素；若行号列号相同，若对应元素值之和为零，不予存储，否则，作为新三元组存到三元组表中。题目中要求时间复杂度为<span
lang=EN-US>O</span>（<span lang=EN-US>m+n</span>）。因此需从两个三元组表的最后一个元素开始相加。第一个非零元素放在<span
lang=EN-US>A</span>矩阵三元组表的第<span lang=EN-US>m+n</span>位置上。结果的三元组至多是<span
lang=EN-US>m+n</span>个非零元素。最后若发生对应元素相加和为零的情况，对三元组表中元素要进行整理，以便使第一个三元组存放在下标<span
lang=EN-US>1</span>的位置上。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.25pt;mso-char-indent-count:2.0;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>CONST</span></b><span lang=EN-US style='font-family:
宋体'> maxnum=</span><span style='font-family:宋体'>大于非零元素数的某个常量<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.25pt;mso-char-indent-count:2.0;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>TYPE </span></b><span lang=EN-US style='font-family:
宋体'>tuple=<b style='mso-bidi-font-weight:normal'>RECORD</b><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>i,j</span><span style='font-family:宋体'>：<span
lang=EN-US>integer</span>； <span lang=EN-US>v</span>：<span lang=EN-US>elemtp</span>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:54.0pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><b style='mso-bidi-font-weight:
normal'>END</b></span><span style='font-family:宋体'>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:26.25pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>sparmattp=<b style='mso-bidi-font-weight:
normal'>RECORD</b><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:26.25pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span>mu</span><span
style='font-family:宋体'>，<span lang=EN-US>nu</span>，<span lang=EN-US>tu</span>：<span
lang=EN-US>integer</span>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:26.25pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span>data<span style='color:red'>:
</span>ARRAY[1..maxnum] OF tuple</span><span style='font-family:宋体'>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:26.25pt;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span><b style='mso-bidi-font-weight:normal'>END</b></span><span
style='font-family:宋体'>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>PROC</span></b><span lang=EN-US style='font-family:宋体'> AddMatrix</span><span
style='font-family:宋体'>（<b style='mso-bidi-font-weight:normal'><span
lang=EN-US>VAR</span></b><span lang=EN-US> A</span>：<span lang=EN-US>sparmattp</span>；<span
lang=EN-US>B</span>：<span lang=EN-US>sparmattp</span>）；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'>// </span><span
style='font-family:宋体'>稀疏矩阵<span lang=EN-US>A</span>和<span lang=EN-US>B</span>各有<span
lang=EN-US>m</span>和<span lang=EN-US>n</span>个非零元素，以三元组表存储。<span lang=EN-US>A</span>的空间足够大，本算法实现两个稀疏矩阵相加，结果放到<span
lang=EN-US>A</span>中。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:11.1pt;mso-char-indent-count:1.0;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>L:=m</span><span style='font-family:宋体'>；<span
lang=EN-US>p:=n</span>；<span lang=EN-US>k:=m+n</span>；<span lang=EN-US>// L,<span
style='color:red'>p</span></span>为<span lang=EN-US>A</span>，<span lang=EN-US>B</span>三元组表指针，<span
lang=EN-US>k</span>为结果三元组表指针（下标）。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:11.1pt;mso-char-indent-count:1.0;tab-stops:54.0pt'><span
lang=EN-US style='font-family:宋体'>A.tu:=m+n</span><span style='font-family:
宋体'>；<span lang=EN-US>// </span>暂存结果矩阵非零元素个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span><b style='mso-bidi-font-weight:normal'>WHILE</b></span><span
style='font-family:宋体'>（<span lang=EN-US>L≥1</span>）<span lang=EN-US>AND</span>（<span
lang=EN-US>p≥1</span>）<b style='mso-bidi-font-weight:normal'><span lang=EN-US>DO</span></b><span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span>[<b style='mso-bidi-font-weight:normal'>CASE</b>
<span style='mso-spacerun:yes'>&nbsp;</span>// </span><span style='font-family:
宋体'>行号不等时，行号大者的三元组为结果三元组表中一项。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:54.0pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>A.data[L].i&gt;B.data[p].i</span><span
style='font-family:宋体'>：<span lang=EN-US>A.data[k]:=A.data[L]</span>；<span
lang=EN-US>L:=L-1</span>；<span lang=EN-US>// A</span>中当前项为结果项<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'>A.data[L].i&lt;B.data[p].i</span><span style='font-family:
宋体'>：<span lang=EN-US>A.data[k]:=B.data[p]</span>；<span lang=EN-US>p:=p-1</span>；<span
lang=EN-US>//B</span>中当前项为结果当前项<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'>A.data[L].i=B.data[p].i</span><span style='font-family:
宋体'>：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:98.85pt;mso-char-indent-count:8.88'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>CASE</span></b><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>//</span><span style='font-family:宋体'>行号相等时，比较列号<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>A.data[L].j&gt;B.data[p].j</span><span style='font-family:宋体'>：<span
lang=EN-US>A.data[k]:=A.data[L]</span>；<span lang=EN-US>L:=L-1</span>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:109.35pt;mso-char-indent-count:9.86;tab-stops:138.75pt'><span
lang=EN-US style='font-family:宋体'>A.data[L].j&lt;B.data[p].j</span><span
style='font-family:宋体'>：<span lang=EN-US>A.data[k]:=B.data[p]</span>；<span
lang=EN-US>p:=p-1</span>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:109.35pt;mso-char-indent-count:9.86;tab-stops:138.75pt 243.0pt 288.0pt'><span
lang=EN-US style='font-family:宋体'>A.data[L].j=B.data[p].j</span><span
style='font-family:宋体'>：<b style='mso-bidi-font-weight:normal'><span
lang=EN-US>IF</span></b><span lang=EN-US> A.data[L].v+B.data[p].v≠0 <b
style='mso-bidi-font-weight:normal'>THEN</b><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:239.25pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>[A.data[L].v=A.data[L].v+ B.data[p].v</span><span style='font-family:
宋体'>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:253.75pt;mso-char-indent-count:22.88;tab-stops:288.0pt'><span
lang=EN-US style='font-family:宋体'>A.data[k]:= A.data[L]</span><span
style='font-family:宋体'>；<span lang=EN-US>]<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:253.75pt;mso-char-indent-count:22.88;tab-stops:253.8pt'><span
lang=EN-US style='font-family:宋体'>L:=L-1</span><span style='font-family:宋体'>；<span
lang=EN-US>p:=p-1</span>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:98.65pt;mso-char-indent-count:8.86;tab-stops:128.25pt'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>ENDC</span></b><span
style='font-family:宋体'>；<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>//</span>结束行号相等时的处理<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:128.25pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span><span style='mso-spacerun:yes'>&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span><b style='mso-bidi-font-weight:
normal'>ENDC</b></span><span style='font-family:宋体'>；<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>//</span>结束行号比较处理。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:11.1pt;mso-char-indent-count:1.0;tab-stops:128.25pt'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span>k:=k-1</span><span
style='font-family:宋体'>； <span lang=EN-US>//</span>结果三元组表的指针前移（减<span
lang=EN-US>1</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:11.1pt;mso-char-indent-count:1.0;tab-stops:128.25pt'><span
lang=EN-US style='font-family:宋体'>]//</span><span style='font-family:宋体'>结束<b
style='mso-bidi-font-weight:normal'><span lang=EN-US>WHILE</span></b>循环。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:128.25pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>WHILE</span></b><span lang=EN-US style='font-family:
宋体'> p&gt;0 <b style='mso-bidi-font-weight:normal'>DO</b>[A.data[k]:=B.data[p]</span><span
style='font-family:宋体'>；<span lang=EN-US>k:=k-1</span>；<span lang=EN-US>p:=p-1</span>；<span
lang=EN-US>]<span style='mso-spacerun:yes'>&nbsp; </span>//</span>处理<span
lang=EN-US>B</span>的剩余部分。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>WHILE</span></b><span
lang=EN-US style='font-family:宋体'> L&gt;1 <b style='mso-bidi-font-weight:normal'>DO</b>[A.data[k]:=A.data[L]</span><span
style='font-family:宋体'>；<span lang=EN-US>k:=k-1</span>；<span lang=EN-US>L:=L-1</span>；<span
lang=EN-US>]<span style='mso-spacerun:yes'>&nbsp; </span>//</span>处理<span
lang=EN-US>A</span>的剩余部分。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>IF</span></b><span
lang=EN-US style='font-family:宋体'> k&gt;1 <b style='mso-bidi-font-weight:normal'>THEN</b>
<span style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>//</span><span style='font-family:宋体'>稀疏矩阵相应元素相加时，有和为零的元素，因而元素总数<span
lang=EN-US>&lt;m+n</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>[<b
style='mso-bidi-font-weight:normal'>FOR</b> p:=k <b style='mso-bidi-font-weight:
normal'>TO</b> m+n <b style='mso-bidi-font-weight:normal'>DO</b> A[p-k+1]:=A[p]</span><span
style='font-family:宋体'>；<span lang=EN-US>// </span>三元组前移，使第一个三元组的下标为<span
lang=EN-US>1</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>A.tu=m+n-k+1</span><span style='font-family:宋体'>；<span lang=EN-US>]<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>// </span>修改结果三元组表中非零元素个数。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>ENDP</span></b><span
style='font-family:宋体'>；<span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span>// </span>结束<span lang=EN-US>addmatrix<o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>[</span><span style='font-family:宋体'>算法讨论<span
lang=EN-US>]</span>算法中三元组的赋值是“成组赋值”，可用行值、列值和元素值的三个赋值句代替。<span lang=EN-US>A</span>和<span
lang=EN-US>B</span>的三元组表的当前元素的指针<span lang=EN-US>L</span>和<span lang=EN-US>p</span>，在每种情况处理后均有修改，而结果三元组表的指针<span
lang=EN-US>k</span>在<span lang=EN-US>CASE</span>语句后统一处理（<span lang=EN-US>k:=k-1</span>）。算法在<span
lang=EN-US>B</span>的第一个元素“大于”<span lang=EN-US>A</span>的最后一个元素时，时间复杂度最佳为<span
lang=EN-US>O</span>（<span lang=EN-US>n</span>），最差情况是每个元素都移动（赋值）了一次，且出现了和为零的元素，致使最后（<span
lang=EN-US>m+n-k+1</span>）个元素向前平移一次，时间复杂度最差为<span lang=EN-US>O</span>（<span
lang=EN-US>m+n</span>）。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>3.[</span><span
style='font-family:宋体'>题目分析<span lang=EN-US>]</span>从<span lang=EN-US>n</span>个数中，取出所有<span
lang=EN-US>k</span>个数的所有组合。设数已存于数组<span lang=EN-US>A[1..n]</span>中。为使结果唯一，可以分别求出包括<span
lang=EN-US>A[n]</span>和不包括<span lang=EN-US>A[n]</span>的所有组合。即包括<span
lang=EN-US>A[n]</span>时，求出从<span lang=EN-US>A[1..n-1]</span>中取出<span
lang=EN-US>k-1</span>个元素的所有组合，不包括<span lang=EN-US>A[n]</span>时，求出从<span
lang=EN-US>A[1..n-1]</span>中取出<span lang=EN-US>k</span>个元素的所有组合。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>CONST</span></b><span
lang=EN-US style='font-family:宋体'> n=10</span><span style='font-family:宋体'>；<span
lang=EN-US>k=3</span>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>TYPE</span></b><span
lang=EN-US style='font-family:宋体'> ARR=ARRAY[1..n] <b style='mso-bidi-font-weight:
normal'>OF</b> integer</span><span style='font-family:宋体'>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>VAR</span></b><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>A</span><span style='font-family:宋体'>，<span lang=EN-US>B</span>：<span
lang=EN-US>ARR</span>；<span lang=EN-US>// A</span>中存放<span lang=EN-US>n</span>个自然数，<span
lang=EN-US>B</span>中存放输出结果。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>PROC</span></b><span
lang=EN-US style='font-family:宋体'> outresult</span><span style='font-family:
宋体'>；<span lang=EN-US>//</span>输出结果<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>FOR</b> j</span><span style='font-family:
宋体'>：<span lang=EN-US>=1 <b style='mso-bidi-font-weight:normal'>TO</b> k <b
style='mso-bidi-font-weight:normal'>DO</b> write</span>（<span lang=EN-US>B[j]</span>）；<span
lang=EN-US>writeln</span>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>ENDP</span></b><span
style='font-family:宋体'>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>PROC</span></b><span
lang=EN-US style='font-family:宋体'> nkcombination</span><span style='font-family:
宋体'>（<span lang=EN-US>i,j,k</span>：<span lang=EN-US>integer</span>）；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>从<span
lang=EN-US>i</span>个数中连续取出<span lang=EN-US>k</span>个数的所有组合，<span lang=EN-US>i</span>个数已存入数组<span
lang=EN-US>A</span>中，<span lang=EN-US>j</span>为结果数组<span lang=EN-US>B</span>中的下标。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>IF</b> k=0 <b style='mso-bidi-font-weight:
normal'>THEN</b> outresult<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>ELSE</b> <b style='mso-bidi-font-weight:
normal'>IF</b></span><span style='font-family:宋体'>（<span lang=EN-US>i-k≥0</span>）<b
style='mso-bidi-font-weight:normal'><span lang=EN-US>THEN</span></b><span
lang=EN-US> [ B[j]:=A[i]</span>；<span lang=EN-US>j:=j+1</span>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>nkcombination</span><span
style='font-family:宋体'>（<span lang=EN-US>i-1</span>，<span lang=EN-US>k-1</span>，<span
lang=EN-US>j</span>）；<span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:146.85pt;mso-char-indent-count:13.24;tab-stops:149.7pt'><span
lang=EN-US style='font-family:宋体'>nkcombination</span><span style='font-family:
宋体'>（<span lang=EN-US>i-1</span>，<span lang=EN-US>k</span>，<span lang=EN-US>j-1</span>）；<span
lang=EN-US>]<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:71.25pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>ENDP</span></b><span style='font-family:宋体'>；<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0;
tab-stops:71.25pt'><span lang=EN-US style='font-family:宋体'>[</span><span
style='font-family:宋体'>算法讨论<span lang=EN-US>]</span>本算法调用时，<span lang=EN-US>i</span>是数的个数（题目中的<span
lang=EN-US>n</span>），<span lang=EN-US>k≤i</span>，<span lang=EN-US>j</span>是结果数组的下标。按题中例子，用<span
lang=EN-US>nkcombination</span>（<span lang=EN-US>5</span>，<span lang=EN-US>1</span>，<span
lang=EN-US>3</span>）调用。若想按正序输出，如<span lang=EN-US>123</span>，<span lang=EN-US>124</span>，…，可将条件表达式<span
lang=EN-US>i-k≥0</span>改为<span lang=EN-US>i+k-1≤n</span>，其中<span lang=EN-US>n</span>是数的个数，<span
lang=EN-US>i</span>初始调用时为<span lang=EN-US>1</span>，两个调用语句中的<span lang=EN-US>i-1</span>均改为<span
lang=EN-US>i+1</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:71.25pt'><span lang=EN-US style='font-family:
宋体'>4. [</span><span style='font-family:宋体'>题目分析<span lang=EN-US>]</span>题目中要求矩阵两行元素的平均值按递增顺序排序，由于每行元素个数相等，按平均值排列与按每行元素之和排列是一个意思。所以应先求出各行元素之和，放入一维数组中，然后选择一种排序方法，对该数组进行排序，注意在排序时若有元素移动，则与之相应的行中各元素也必须做相应变动。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:71.25pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>void</span></b><span lang=EN-US style='font-family:宋体'> Translation</span><span
style='font-family:宋体'>（<span lang=EN-US>float *matrix</span>，<b
style='mso-bidi-font-weight:normal'><span lang=EN-US>int</span></b><span
lang=EN-US> n</span>）<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:71.25pt'><span lang=EN-US style='font-family:宋体'>//</span><span
style='font-family:宋体'>本算法对<span lang=EN-US>n</span>×<span lang=EN-US>n</span>的矩阵<span
lang=EN-US>matrix</span>，通过行变换，使其各行元素的平均值按递增排列。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:71.25pt'><span lang=EN-US style='font-family:宋体'>{<b
style='mso-bidi-font-weight:normal'>int</b> i,j,k,l</span><span
style='font-family:宋体'>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5;tab-stops:71.25pt'><span
lang=EN-US style='font-family:宋体'>float sum</span><span style='font-family:
宋体'>，<span lang=EN-US style='color:red'>min</span>；<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>//sum</span>暂存各行元素之和<span
lang=EN-US><span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>float *p, *pi, *pk;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>for</span></b><span lang=EN-US
style='font-family:宋体'>(i=0; i&lt;n; i++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>{sum=0.0; pk=matrix+i*n;<span style='mso-spacerun:yes'>&nbsp; </span>//p<span
style='color:red'>k</span></span><span style='font-family:宋体'>指向矩阵各行第<span
lang=EN-US>1</span>个元素<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>for</b> (j=0; j&lt;n;
j++){sum+=*(pk); pk++;}<span style='mso-spacerun:yes'>&nbsp; </span>//</span><span
style='font-family:宋体'>求一行元素之和<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'>*(p+i)=sum; <span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span>//</span><span
style='font-family:宋体'>将一行元素之和存入一维数组<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}//for i<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>for</span></b><span lang=EN-US
style='font-family:宋体'>(i=0; i&lt;n-1; i++)<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span>//</span><span style='font-family:宋体'>用选择法对数组<span
lang=EN-US>p</span>进行排序<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>{min=*(p+i); k=i; <span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span>//</span><span
style='font-family:宋体'>初始设第<span lang=EN-US>i</span>行元素之和最小<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>for</span></b><span lang=EN-US style='font-family:宋体'>(j=i+1;j&lt;n;j++)
<b style='mso-bidi-font-weight:normal'>if</b>(p[j]&lt;min) {k=j; min=p[j];} <span
style='mso-spacerun:yes'>&nbsp;</span>//</span><span style='font-family:宋体'>记新的最小值及行号<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>if</span></b><span lang=EN-US style='font-family:宋体'>(i!=k)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span><span style='font-family:宋体'>若最小行不是当前行<span lang=EN-US>,</span>要进行交换<span
lang=EN-US>(</span>行元素及行元素之和<span lang=EN-US>)<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span>{pk=matrix+n*k; <span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>//pk</span><span style='font-family:
宋体'>指向第<span lang=EN-US>k</span>行第<span lang=EN-US>1</span>个元素<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>pi=matrix+n*i; <span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>//pi</span><span style='font-family:
宋体'>指向第<span lang=EN-US>i</span>行第<span lang=EN-US>1</span>个元素<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>for</b>(j=0;j&lt;n;j++) //</span><span style='font-family:宋体'>交换两行中对应元素<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>{sum=*(pk+j);
*(pk+j)=*(pi+j); *(pi+j)=sum;}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>sum=p[i]; p[i]=p[k]; p[k]=sum;<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>交换一维数组中元素之和<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt;tab-stops:49.95pt 66.6pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span>}//if<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'>}//for i<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>free(p); //</span><span style='font-family:宋体'>释放<span lang=EN-US>p</span>数组<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
tab-stops:11.1pt'><span lang=EN-US style='font-family:宋体'>}// Translation<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>[</span><span style='font-family:宋体'>算法分析<span
lang=EN-US>] </span>算法中使用选择法排序<span lang=EN-US>,</span>比较次数较多<span lang=EN-US>,</span>但数据交换<span
lang=EN-US>(</span>移动<span lang=EN-US>)</span>较少<span lang=EN-US>.</span>若用其它排序方法<span
lang=EN-US>,</span>虽可减少比较次数<span lang=EN-US>,</span>但数据移动会增多<span lang=EN-US>.</span>算法时间复杂度为<span
lang=EN-US>O(n</span></span><sup><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>2</span></sup><span lang=EN-US style='font-family:宋体'>).<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>5. <span
style='color:red'>[</span></span><span style='font-family:宋体;color:red'>题目分析<span
lang=EN-US>] </span>因为数组中存放的是从<span lang=EN-US>1</span>到<span lang=EN-US>N</span>的自然数，原程序运行后<span
lang=EN-US>,</span>数组元素<span lang=EN-US>A[i](1&lt;=i&lt;=N)</span>中存放的是<span
lang=EN-US>A[1]</span>到<span lang=EN-US>A[i-1]</span>中比原<span lang=EN-US>A[i]</span>小的数据元素的个数。易见<span
lang=EN-US>A[N]+1</span>就是原<span lang=EN-US>A[N]</span>的值<span lang=EN-US>(</span>假定是<span
lang=EN-US>j,1&lt;=j&lt;=N)</span>。设一元素值为<span lang=EN-US>1</span>的辅助数组<span
lang=EN-US>flag</span>，采用累加，确定一个值后，<span lang=EN-US>flag</span>中相应元素置零。下面程序段将<span
lang=EN-US>A</span>还原成原来的<span lang=EN-US>A:<o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;color:red'>&nbsp;&nbsp;
<b style='mso-bidi-font-weight:normal'>VAR</b> flag:ARRAY[1..N] OF integer;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:16.7pt;mso-char-indent-count:1.5'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体;
color:red'>FOR</span></b><span lang=EN-US style='font-family:宋体;color:red'> i:=1
<b style='mso-bidi-font-weight:normal'>TO</b> N <b style='mso-bidi-font-weight:
normal'>DO</b> flag[i]:=1;<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>//</span><span
style='font-family:宋体;color:red'>赋初值<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;color:red'><span
style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span><b style='mso-bidi-font-weight:normal'>FOR</b>
i:=<st1:place w:st="on">N <b style='mso-bidi-font-weight:normal'>DOWNTO</b></st1:place>
1 <b style='mso-bidi-font-weight:normal'>DO</b><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;color:red'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span><b style='mso-bidi-font-weight:normal'>BEGIN</b>
sum:=0; j:=1; found:=false;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:66.1pt;mso-char-indent-count:5.94'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体;
color:red'>WHILE</span></b><span lang=EN-US style='font-family:宋体;color:red'> j&lt;=N
AND NOT found <b style='mso-bidi-font-weight:normal'>DO</b> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:65.9pt;mso-char-indent-count:5.94'><span
lang=EN-US style='font-family:宋体;color:red'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>BEGIN</b> sum:=sum+flag[j];<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:115.2pt;mso-char-indent-count:10.35'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体;
color:red'>IF</span></b><span lang=EN-US style='font-family:宋体;color:red'> sum=A[i]+1
<b style='mso-bidi-font-weight:normal'>THEN</b> <b style='mso-bidi-font-weight:
normal'>BEGIN</b> flag[j]:=0; found:=true; <b style='mso-bidi-font-weight:normal'>END</b>;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:65.9pt;mso-char-indent-count:5.94'><span
lang=EN-US style='font-family:宋体;color:red'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>END</b>; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:65.9pt;mso-char-indent-count:5.94'><span
lang=EN-US style='font-family:宋体;color:red'>A[i]:=j;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;color:red'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>END</b>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span>6.[</span><span style='font-family:宋体'>题目分析<span
lang=EN-US>] </span>寻找马鞍点最直接的方法<span lang=EN-US>,</span>是在一行中找出一个最小值元素<span
lang=EN-US>,</span>然后检查该元素是否是元素所在列的最大元素<span lang=EN-US>,</span>如是<span
lang=EN-US>,</span>则输出一个马鞍点<span lang=EN-US>,</span>时间复杂度是<span lang=EN-US>O(m*(m+n)).</span>本算法使用两个辅助数组<span
lang=EN-US>max</span>和<span lang=EN-US>min,</span>存放每列中最大值元素的行号和每行中最小值元素的列号<span
lang=EN-US>,</span>时间复杂度为<span lang=EN-US>O</span>（<span lang=EN-US>m*n+m</span>），但比较次数比前种算法会增加，也多使用向量空间。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>int</span></b><span lang=EN-US
style='font-family:宋体'> m=10, n=10;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>void</b> Saddle(<b style='mso-bidi-font-weight:
normal'>int</b> A[m][n])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>//A</span><span style='font-family:宋体'>是<span lang=EN-US>m*n</span>的矩阵<span
lang=EN-US>,</span>本算法求矩阵<span lang=EN-US>A</span>中的马鞍点<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>{<b
style='mso-bidi-font-weight:normal'>int</b> max[n]={0}, //max</span><span
style='font-family:宋体'>数组存放各列最大值元素的行号<span lang=EN-US>,</span>初始化为行号<span
lang=EN-US>0;<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:32.5pt;mso-char-indent-count:2.93'><span lang=EN-US
style='font-family:宋体'>min[m]={0}, //min</span><span style='font-family:宋体'>数组存放各行最小值元素的列号<span
lang=EN-US>,</span>初始化为列号<span lang=EN-US>0;<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:27.0pt'><span lang=EN-US style='font-family:宋体'>i, j;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>for</b>(i=0;i&lt;m;i++) //</span><span
style='font-family:宋体'>选各行最小值元素和各列最大值元素<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>for</span></b><span lang=EN-US style='font-family:宋体'>(j=0;j&lt;n;j++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span>{<b style='mso-bidi-font-weight:normal'>if</b>(A[max[j]][j]&lt;A[i][j])
max[j]=i;<span style='mso-spacerun:yes'>&nbsp; </span>//</span><span
style='font-family:宋体'>修改第<span lang=EN-US>j</span>列最大元素的行号<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>if</b>(A[i][min[i]]&gt;A[i][j]) min[i]=j; <span
style='mso-spacerun:yes'>&nbsp;</span>//</span><span style='font-family:宋体'>修改第<span
lang=EN-US>i</span>行最小元素的列号<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:32.6pt;mso-char-indent-count:2.94'><span lang=EN-US
style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>for</b> (i=0;i&lt;m;i++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>{j=min[i];<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='mso-spacerun:yes'>&nbsp;</span>//</span><span
style='font-family:宋体'>第<span lang=EN-US>i</span>行最小元素的列号<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>if</span></b><span lang=EN-US style='font-family:宋体'>(i==max[j])printf(“A[%d][%d]</span><span
style='font-family:宋体'>是马鞍点，元素值是<span lang=EN-US>%d”,i,j,A[i][j]); <span
style='mso-spacerun:yes'>&nbsp;</span>//</span>是马鞍点<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:27.75pt'><span lang=EN-US style='font-family:
宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>}// Saddle<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>[</span><span style='font-family:宋体'>算法讨论<span
lang=EN-US>] </span>以上算法假定每行（列）最多只有一个可能的马鞍点，若有多个马鞍点<span lang=EN-US>,</span>因为一行<span
lang=EN-US>(</span>或一列<span lang=EN-US>)</span>中可能的马鞍点数值是相同的，则可用二维数组<span
lang=EN-US>min2</span>，第一维是行向量，是各行行号，第二维是列向量，存放一行中最大值的列号。对最大值也同样处理，使用另一二维数组<span
lang=EN-US>max2</span>，第一维是列向量，是各列列号，第二维存该列最大值元素的行号。最后用类似上面方法，找出每行<span
lang=EN-US>(i)</span>最小值元素的每个列号（<span lang=EN-US>j</span>），再到<span lang=EN-US>max2</span>数组中找该列是否有最大值元素的行号（<span
lang=EN-US>i</span>），若有，则是马鞍点。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>7</span><span
style='font-family:宋体'>．<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>我们用<span
lang=EN-US>l</span>代表最长平台的长度，用<span lang=EN-US>k</span>指示最长平台在数组<span
lang=EN-US>b</span>中的起始位置（下标）。用<span lang=EN-US>j</span>记住局部平台的起始位置，用<span
lang=EN-US>i</span>指示扫描<span lang=EN-US>b</span>数组的下标，<span lang=EN-US>i</span>从<span
lang=EN-US>0</span>开始，依次和后续元素比较，若局部平台长度（<span lang=EN-US>i-j</span>）大于<span
lang=EN-US>l</span>时，则修改最长平台的长度<span lang=EN-US>k</span>（<span lang=EN-US>l=i-j</span>）和其在<span
lang=EN-US>b</span>中的起始位置（<span lang=EN-US>k=j</span>），直到<span lang=EN-US>b</span>数组结束，<span
lang=EN-US>l</span>即为所求。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>void</span></b><span
lang=EN-US style='font-family:宋体'> Platform (<b style='mso-bidi-font-weight:
normal'>int</b> b[ ], <b style='mso-bidi-font-weight:normal'>int</b> N)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span>//</span><span style='font-family:宋体'>求具有<span
lang=EN-US>N</span>个元素的整型数组<span lang=EN-US>b</span>中最长平台的长度。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{l=1;k=0;j=0;i=0;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(i&lt;n-1)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'><span
style='color:red'>while</span></b>(i&lt;n-1 &amp;&amp; b[i]==b[i+1]) i++;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>if</b>(i-j+1&gt;l) {l=i-j+1;k=j;} <span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>//</span><span style='font-family:
宋体'>局部最长平台<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>i++; j=i; }<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span><span style='font-family:宋体;color:red'>新平台起点</span><span
lang=EN-US style='font-family:宋体'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>printf(“</span><span style='font-family:宋体'>最长平台长度<span
lang=EN-US>%d</span>，在<span lang=EN-US>b</span>数组中起始下标为<span lang=EN-US>%d”</span>，<span
lang=EN-US>l</span>，<span lang=EN-US>k)</span>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>}// Platform<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>8</span><span
style='font-family:宋体'>．<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>矩阵中元素按行和按列都已排序，要求查找时间复杂度为<span
lang=EN-US>O</span>（<span lang=EN-US>m+n</span>），因此不能采用常规的二层循环的查找。可以先从右上角（<span
lang=EN-US>i=a,j=d</span>）元素与<span lang=EN-US>x</span>比较，只有三种情况：一是<span
lang=EN-US>A[i,j]&gt;x</span>， 这情况下向<span lang=EN-US>j </span>小的方向继续查找；二是<span
lang=EN-US>A[i,j]&lt;x</span>，下步应向<span lang=EN-US>i</span>大的方向查找；三是<span
lang=EN-US>A[i,j]=x</span>，查找成功。否则，若下标已超出范围，则查找失败。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'>void search(datatype A[ ][ ], <b style='mso-bidi-font-weight:
normal'>int</b> a,b,c,d, datatype x)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>//n*m</span><span
style='font-family:宋体'>矩阵<span lang=EN-US>A,</span>行下标从<span lang=EN-US>a</span>到<span
lang=EN-US>b,</span>列下标从<span lang=EN-US>c</span>到<span lang=EN-US>d,</span>本算法查找<span
lang=EN-US>x</span>是否在矩阵<span lang=EN-US>A</span>中<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>{i=a; j=d;
flag=0; //flag</span><span style='font-family:宋体'>是成功查到<span lang=EN-US>x</span>的标志<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>while</b>(i&lt;=b &amp;&amp; j&gt;=c)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>if</b>(<span style='color:red'>A[i][j]</span>==x)
{flag=1;break;}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>else</b> <b style='mso-bidi-font-weight:
normal'>if</b> (<span style='color:red'>A[i][j]</span>&gt;x) j--; <b
style='mso-bidi-font-weight:normal'>else</b> i++;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>if</b>(flag) printf(“A[%d<span
style='color:red'>][</span>%d]=%d”,i,j,x);<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>//</span><span
style='font-family:宋体'>假定<span lang=EN-US>x</span>为整型<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>else</b> printf(“</span><span
style='font-family:宋体'>矩阵<span lang=EN-US>A</span>中无<span lang=EN-US>%d </span>元素<span
lang=EN-US>”</span>，<span lang=EN-US>x)</span>；<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.0pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span>}</span><span
style='font-family:宋体'>算法<span lang=EN-US>search</span>结束。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>[</span><span
style='font-family:宋体'>算法讨论<span lang=EN-US>]</span>算法中查找<span lang=EN-US>x</span>的路线从右上角开始，向下（当<span
lang=EN-US>x&gt;A[i,j]</span>）或向左（当<span lang=EN-US>x&lt;A[i,j]</span>）。向下最多是<span
lang=EN-US>m</span>，向左最多是<span lang=EN-US>n</span>。最佳情况是在右上角比较一次成功，最差是在左下角（<span
lang=EN-US>A[b,c]</span>），比较<span lang=EN-US>m+n</span>次，故算法最差时间复杂度是<span
lang=EN-US>O(m+n</span>）。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>9</span><span
style='font-family:宋体'>．<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>本题的一种算法前面已讨论（请参见本章三、填空题<span
lang=EN-US>38</span>）。这里给出另一中解法。分析数的填法，是按“从右上到左下”的<span lang=EN-US>”</span>蛇形<span
lang=EN-US>”</span>，沿平行于副对角线的各条对角线上，将自然数从小到大填写。当从右上到左下时，坐标<span lang=EN-US>i</span>增加，坐标<span
lang=EN-US>j</span>减小，当<span lang=EN-US>j</span>减到小于<span lang=EN-US>0</span>时结束，然后<span
lang=EN-US>j</span>从<span lang=EN-US>0</span>开始增加，而<span lang=EN-US>i</span>从当前值开始减少，到<span
lang=EN-US>i&lt;0</span>时结束。然后继续如此循环。当过副对角线后，在<span lang=EN-US>i&gt;n-1</span>时，<span
lang=EN-US>j=j+2</span>，开始从左下向右上填数；而当<span lang=EN-US>j&gt;n-1</span>时<span
lang=EN-US>i=i+2</span>，开始从右上向左下的填数，直到<span lang=EN-US>n*n</span>个数填完为止。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>void</span></b><span
lang=EN-US style='font-family:宋体'> Snake_Number(<b style='mso-bidi-font-weight:
normal'>int</b> A[n][n],<b style='mso-bidi-font-weight:normal'>int</b> n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>//</span><span style='font-family:宋体'>将自然数<span lang=EN-US>1..n*n,</span>按<span
lang=EN-US>”</span>蛇形<span lang=EN-US>”</span>填入<span lang=EN-US>n</span>阶方阵<span
lang=EN-US>A</span>中<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{i=0; j=0; k=1;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//i,j</span><span style='font-family:宋体'>是矩阵元素的下标<span lang=EN-US>,k</span>是要填入的自然数<span
lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>while</b>(i&lt;n &amp;&amp; j&lt;n) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:11.1pt;mso-char-indent-count:1.0'><span lang=EN-US
style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>while</b>(i&lt;n
&amp;&amp; j&gt;-1)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span><span style='font-family:宋体'>从右上向左下填数<span lang=EN-US>,<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>{A[i][j]=k++; i++ ;j--;}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:38.85pt;mso-char-indent-count:3.49'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>if</span></b><span
lang=EN-US style='font-family:宋体'>((j&lt;0)&amp;&amp;(i&lt;n)) j=0;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>//</span><span style='font-family:宋体'>副对角线及以上部分的新<span
lang=EN-US>i,j</span>坐标<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span><b style='mso-bidi-font-weight:normal'>else</b>
{j=j+2; i=n-1;}<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>// </span><span
style='font-family:宋体'>副对角线以下的新的<span lang=EN-US>i,j</span>坐标<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:16.65pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>while</span></b><span lang=EN-US style='font-family:
宋体'>(i&gt;-1 &amp;&amp; j&lt;n)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>//</span><span style='font-family:
宋体'>从左下向右上<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span>{A[i][j]=k++; i--; j++;}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:16.65pt'><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-family:宋体'>if</span></b><span lang=EN-US style='font-family:宋体'>(i&lt;0
&amp;&amp; j&lt;n) i=0;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:21.75pt'><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp; </span><b style='mso-bidi-font-weight:normal'>else</b>{i=i+2;
j=n-1;}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:32.6pt;mso-char-indent-count:2.94'><span
lang=EN-US style='font-family:宋体'>}//</span><span style='font-family:宋体'>最外层<b
style='mso-bidi-font-weight:normal'><span lang=EN-US>while</span></b><span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>}//Snake_Number<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>10.[</span><span
style='font-family:宋体'>题目分析<span lang=EN-US>]</span>判断二维数组中元素是否互不相同，只有逐个比较<span
lang=EN-US>,</span>找到一对相等的元素，就可结论为不是互不相同。如何达到每个元素同其它元素比较一次且只一次？在当前行，每个元素要同本行后面的元素比较一次（下面第一个循环控制变量<span
lang=EN-US>p</span>的<span lang=EN-US>for</span>循环），然后同第<span lang=EN-US>i+1</span>行及以后各行元素比较一次，这就是循环控制变量<span
lang=EN-US>k</span>和<span lang=EN-US>p</span>的二层<span lang=EN-US>for</span>循环。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:232.95pt;mso-para-margin-left:2.0gd;
text-indent:-210.75pt;mso-char-indent-count:-18.93'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>int</span></b><span lang=EN-US
style='font-family:宋体'> JudgEqual(ing a[m][n],<b style='mso-bidi-font-weight:
normal'>int</b> m,n)<span style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>//</span><span
style='font-family:宋体'>判断二维数组中所有元素是否互不相同，如是，返回<span lang=EN-US>1</span>；否则，返回<span
lang=EN-US>0</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>for</b>(i=0;i&lt;m;i++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>for</b>(j=0;j&lt;n-1;j++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>{ <b
style='mso-bidi-font-weight:normal'>for</b>(p=j+1;p&lt;n;p++) //</span><span
style='font-family:宋体'>和同行其它元素比较<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>if</b>(a[i][j]==a[i][p]) {printf(“no”); <b
style='mso-bidi-font-weight:normal'>return</b>(0); }<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:230.15pt;mso-para-margin-left:6.5gd;
text-indent:-158.05pt;mso-char-indent-count:-14.25'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span>//</span><span
style='font-family:宋体'>只要有一个相同的，就结论不是互不相同<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>for</b>(k=i+1;k&lt;m;k++)<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>和第<span
lang=EN-US>i+1</span>行及以后元素比较<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>for</b>(p=0;p&lt;n;p++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>if</b>(a[i][j]==a[k][p]) {printf(“no”);
<b style='mso-bidi-font-weight:normal'>return</b>(0); }<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:231.45pt;mso-para-margin-left:3.5gd;
text-indent:-192.65pt;mso-char-indent-count:-17.37'><span lang=EN-US
style='font-family:宋体'>}// for(j=0;j&lt;n-1;j++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:231.65pt;mso-para-margin-left:3.0gd;
text-indent:-198.4pt;mso-char-indent-count:-17.89'><span lang=EN-US
style='font-family:宋体'>printf(yes”); <b style='mso-bidi-font-weight:normal'>return</b>(1);<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>//</span><span style='font-family:
宋体'>元素互不相同<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:232.15pt;mso-para-margin-left:2.0gd;
text-indent:-209.95pt;mso-char-indent-count:-18.93'><span lang=EN-US
style='font-family:宋体'>}//</span><span style='font-family:宋体'>算法<span
lang=EN-US>JudgEqual</span>结束<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:11.1pt;mso-char-indent-count:1.0'><span
style='font-family:宋体'>（<span lang=EN-US>2</span>）二维数组中的每一个元素同其它元素都比较一次，数组中共<span
lang=EN-US>m*n</span>个元素，第<span lang=EN-US>1</span>个元素同其它<span lang=EN-US>m*n-1</span>个元素比较，第<span
lang=EN-US>2</span>个元素同其它<span lang=EN-US>m*n-2 </span>个元素比较，……，第<span
lang=EN-US>m*n-1</span>个元素同最后一个元素<span lang=EN-US>(m*n)</span>比较一次<span
lang=EN-US>,</span>所以在元素互不相等时总的比较次数为<span lang=EN-US> (m*n-1)+(m*n-2)+</span>…<span
lang=EN-US>+2+1=</span>（<span lang=EN-US>m*n</span>）<span lang=EN-US>(m*n-1)/2</span>。在有相同元素时<span
lang=EN-US>,</span>可能第一次比较就相同<span lang=EN-US>,</span>也可能最后一次比较时相同<span
lang=EN-US>,</span>设在<span lang=EN-US>(m*n-1)</span>个位置上均可能相同<span lang=EN-US>,</span>这时的平均比较次数约为（<span
lang=EN-US>m*n</span>）<span lang=EN-US>(m*n-1)/4</span>，总的时间复杂度是<span
lang=EN-US>O(n</span></span><sup><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>4</span></sup><span lang=EN-US style='font-family:宋体'>)</span><span
style='font-family:宋体'>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>11</span><span
style='font-family:宋体'>．二项式<span lang=EN-US>(a+b</span>）</span><sup><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'>n</span></sup><span
style='mso-bidi-font-size:10.5pt;font-family:宋体'>展开式的系数的递归定义为：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>C(n,k)=<sub><!--[if gte vml 1]><v:shape
 id="_x0000_i1038" type="#_x0000_t75" style='width:195.75pt;height:38.25pt'
 o:ole="">
 <v:imagedata src="da05.files/image033.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=261 height=51
src="da05.files/image034.gif" v:shapes="_x0000_i1038"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1038"
  DrawAspect="Content" ObjectID="_1149856366">
 </o:OLEObject>
</xml><![endif]--><span style='mso-spacerun:yes'>&nbsp; </span>C(n,k)=C</span><sub><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'>n</span></sub><sup><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'>k</span></sup><span
lang=EN-US style='font-family:宋体'>=<sub><!--[if gte vml 1]><v:shape id="_x0000_i1039"
 type="#_x0000_t75" style='width:99pt;height:33pt' o:ole="">
 <v:imagedata src="da05.files/image035.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=132 height=44
src="da05.files/image036.gif" v:shapes="_x0000_i1039"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1039"
  DrawAspect="Content" ObjectID="_1149856370">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='font-family:宋体'>(1)<b style='mso-bidi-font-weight:normal'>int</b> BiForm(<b
style='mso-bidi-font-weight:normal'>int</b> n,k)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span><span style='font-family:宋体'>二项式展开式的系数的递归算法<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>{<b style='mso-bidi-font-weight:normal'>if</b>(n&lt;0 || k&lt;0 ||
k&gt;=n) {printf(“</span><span style='font-family:宋体'>参数错误<span lang=EN-US>\n ”);exit(0);}<o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>if</b>(k==0 || k==n) <b
style='mso-bidi-font-weight:normal'>return</b>(1);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>else</b> <b style='mso-bidi-font-weight:
normal'>return</b>(BiForm(n-1,k)+BiForm(n-1,k-1);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>(2)C(6,4)</span><span style='font-family:
宋体'>的递归树<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><!--[if gte vml 1]><v:group
 id="_x0000_s1046" style='position:absolute;left:0;text-align:left;
 margin-left:56.15pt;margin-top:4.5pt;width:369.75pt;height:152pt;z-index:2'
 coordorigin="2214,1963" coordsize="7395,3040">
 <v:group id="_x0000_s1047" style='position:absolute;left:2214;top:1963;
  width:7395;height:3040' coordorigin="3294,2562" coordsize="7395,3040">
  <v:shapetype id="_x0000_t202" coordsize="21600,21600" o:spt="202" path="m,l,21600r21600,l21600,xe">
   <v:stroke joinstyle="miter"/>
   <v:path gradientshapeok="t" o:connecttype="rect"/>
  </v:shapetype><v:shape id="_x0000_s1048" type="#_x0000_t202" style='position:absolute;
   left:8799;top:4232;width:1890;height:614' filled="f" stroked="f">
   <v:textbox style='mso-next-textbox:#_x0000_s1048'>
    <![if !mso]>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td><![endif]>
      <div>
      <p class=MsoNormal><span lang=EN-US>C(2,1)+C(2,0)</span></p>
      </div>
      <![if !mso]></td>
     </tr>
    </table>
    <![endif]></v:textbox>
  </v:shape><v:group id="_x0000_s1049" style='position:absolute;left:3294;
   top:2562;width:7080;height:3040' coordorigin="3294,2562" coordsize="7080,3040">
   <v:shape id="_x0000_s1050" type="#_x0000_t202" style='position:absolute;
    left:5334;top:2562;width:1155;height:613' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1050'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(6,4)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1051" type="#_x0000_t202" style='position:absolute;
    left:5439;top:4299;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1051'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(2,2)+C(2,1)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1052" type="#_x0000_t202" style='position:absolute;
    left:5754;top:4741;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1052'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(1,1)+C(1,0)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1053" type="#_x0000_t202" style='position:absolute;
    left:7119;top:4741;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1053'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(1,1)+C(1,0)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1054" type="#_x0000_t202" style='position:absolute;
    left:8484;top:4741;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1054'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(1,1)+C(1,0)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1055" type="#_x0000_t202" style='position:absolute;
    left:6864;top:4292;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1055'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(2,2)+C(2,1)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:group id="_x0000_s1056" style='position:absolute;left:8805;
    top:4973;width:564;height:614' coordorigin="3450,3266" coordsize="564,614">
    <v:group id="_x0000_s1057" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1058" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1059" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1060" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1061" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1061'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1062" style='position:absolute;
    left:9420;top:4988;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1063" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1064" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1065" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1066" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1067" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1067'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1068" style='position:absolute;
    left:7455;top:4951;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1069" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1070" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1071" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1072" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1073" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1073'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1074" style='position:absolute;
    left:8115;top:4973;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1075" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1076" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1077" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1078" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1079" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1079'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1080" style='position:absolute;
    left:6750;top:4958;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1081" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1082" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1083" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1084" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1085" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1085'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1086" style='position:absolute;
    left:6075;top:4958;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1087" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1088" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1089" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1090" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1091" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1091'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1092" style='position:absolute;
    left:9765;top:4464;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1093" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1094" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1095" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1096" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1097" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1097'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1098" style='position:absolute;
    left:7185;top:4479;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1099" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1100" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1101" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1102" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1103" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1103'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1104" style='position:absolute;
    left:3864;top:4037;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1105" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1106" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1107" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1108" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1109" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1109'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1110" style='position:absolute;
    left:4179;top:4486;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1111" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1112" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1113" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1114" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1115" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1115'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1116" style='position:absolute;
    left:4599;top:4943;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1117" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1118" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1119" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1120" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1121" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1121'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1122" style='position:absolute;
    left:5289;top:4943;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1123" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1124" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1125" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1126" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1127" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1127'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:group id="_x0000_s1128" style='position:absolute;
    left:5769;top:4479;width:564;height:614' coordorigin="3450,3266"
    coordsize="564,614">
    <v:group id="_x0000_s1129" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1130" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1131" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1132" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1133" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1133'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:shape id="_x0000_s1134" type="#_x0000_t202" style='position:absolute;
    left:4254;top:4741;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1134'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(1,1)+C(1,0)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1135" type="#_x0000_t202" style='position:absolute;
    left:3879;top:4314;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1135'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(2,2)+C(2,1)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1136" type="#_x0000_t202" style='position:absolute;
    left:3549;top:3820;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1136'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(3,3)+C(3,2)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1137" type="#_x0000_t202" style='position:absolute;
    left:3294;top:3363;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1137'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(4,4)+C(4,3)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:group id="_x0000_s1138" style='position:absolute;left:3594;
    top:3573;width:564;height:614' coordorigin="3450,3266" coordsize="564,614">
    <v:group id="_x0000_s1139" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1140" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1141" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1142" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1143" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1143'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group><v:shape id="_x0000_s1144" type="#_x0000_t202" style='position:absolute;
    left:3654;top:2900;width:1155;height:613' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1144'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(5,4)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1145" type="#_x0000_t202" style='position:absolute;
    left:7224;top:3821;width:1155;height:613' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1145'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(3,2)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1146" type="#_x0000_t202" style='position:absolute;
    left:5079;top:3820;width:1890;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1146'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(3,3)+C(3,2)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1147" type="#_x0000_t202" style='position:absolute;
    left:9069;top:3820;width:1155;height:613' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1147'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(3,1)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1148" type="#_x0000_t202" style='position:absolute;
    left:5439;top:3356;width:1155;height:613' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1148'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(4,3)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1149" type="#_x0000_t202" style='position:absolute;
    left:8109;top:3409;width:1155;height:613' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1149'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(4,2)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1150" type="#_x0000_t202" style='position:absolute;
    left:6804;top:2945;width:1155;height:613' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1150'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>C(5,3)</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1151" style='position:absolute;left:4365;
    top:2839;width:1090;height:281' coordsize="1090,281" path="m1090,l,281e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1152" style='position:absolute;left:6045;
    top:2850;width:865;height:266' coordsize="865,266" path="m865,266l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1153" style='position:absolute;left:3720;
    top:3210;width:270;height:270;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="270,270" path="m270,l,270e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1154" style='position:absolute;left:3990;
    top:3685;width:370;height:260;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="370,260" path="m370,l,260e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1155" style='position:absolute;left:4320;
    top:4142;width:310;height:283;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="310,283" path="m310,l,283e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1156" style='position:absolute;left:4665;
    top:4651;width:295;height:209;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="295,209" path="m295,l,209e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1157" style='position:absolute;left:5880;
    top:3281;width:1300;height:199;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="1300,199" path="m1300,l,199e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1158" style='position:absolute;left:5505;
    top:3700;width:325;height:200;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="325,200" path="m325,l,200e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1159" style='position:absolute;left:5850;
    top:4127;width:325;height:283;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="325,283" path="m325,l,283e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1160" style='position:absolute;left:7290;
    top:4157;width:340;height:253;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="340,253" path="m340,l,253e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1161" style='position:absolute;left:9195;
    top:4127;width:280;height:223;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="280,223" path="m280,l,223e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1162" style='position:absolute;left:7740;
    top:3730;width:760;height:245;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="760,245" path="m760,l,245e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1163" style='position:absolute;left:8895;
    top:4561;width:310;height:299;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="310,299" path="m310,l,299e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1164" style='position:absolute;left:7629;
    top:4606;width:310;height:299;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="310,299" path="m310,l,299e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1165" style='position:absolute;left:6204;
    top:4606;width:310;height:299;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="310,299" path="m310,l,299e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1166" style='position:absolute;left:7484;
    top:3247;width:766;height:293;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="766,293" path="m766,293l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1167" style='position:absolute;left:8789;
    top:3711;width:421;height:279;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="421,279" path="m421,279l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1168" style='position:absolute;left:4209;
    top:3222;width:186;height:292;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="186,292" path="m186,292l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1169" style='position:absolute;left:4524;
    top:3716;width:141;height:218;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="141,218" path="m141,218l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:line id="_x0000_s1170" style='position:absolute;flip:x y'
    from="4764,4142" to="4974,4449">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
   </v:line><v:shape id="_x0000_s1171" style='position:absolute;left:5124;
    top:4652;width:201;height:242;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="201,242" path="m201,242l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1172" style='position:absolute;left:5979;
    top:3701;width:201;height:248;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="201,248" path="m201,248l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1173" style='position:absolute;left:6294;
    top:4158;width:186;height:241;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="186,241" path="m186,241l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1174" style='position:absolute;left:6654;
    top:4637;width:201;height:272;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="201,272" path="m201,272l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1175" style='position:absolute;left:7734;
    top:4173;width:231;height:256;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="231,256" path="m231,256l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1176" style='position:absolute;left:8019;
    top:4652;width:171;height:212;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="171,212" path="m171,212l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:line id="_x0000_s1177" style='position:absolute;flip:x y'
    from="9354,4591" to="9564,4898">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
   </v:line><v:shape id="_x0000_s1178" style='position:absolute;left:9609;
    top:4158;width:246;height:209;mso-position-horizontal:absolute;
    mso-position-vertical:absolute' coordsize="246,209" path="m246,209l,e"
    filled="f">
    <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
    <v:path arrowok="t"/>
   </v:shape><v:shape id="_x0000_s1179" type="#_x0000_t202" style='position:absolute;
    left:5499;top:2884;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1179'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>+</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1180" type="#_x0000_t202" style='position:absolute;
    left:6294;top:2667;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1180'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>15</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1181" type="#_x0000_t202" style='position:absolute;
    left:7689;top:3071;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1181'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>10</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1182" type="#_x0000_t202" style='position:absolute;
    left:8889;top:3543;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1182'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>6</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1183" type="#_x0000_t202" style='position:absolute;
    left:9669;top:3992;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1183'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>3</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1184" type="#_x0000_t202" style='position:absolute;
    left:7779;top:4007;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1184'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>3</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1185" type="#_x0000_t202" style='position:absolute;
    left:9369;top:4479;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1185'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>2</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1186" type="#_x0000_t202" style='position:absolute;
    left:8019;top:4524;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1186'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>2</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1187" type="#_x0000_t202" style='position:absolute;
    left:6654;top:4501;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1187'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>2</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1188" type="#_x0000_t202" style='position:absolute;
    left:5139;top:4509;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1188'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>2</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1189" type="#_x0000_t202" style='position:absolute;
    left:4779;top:4037;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1189'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>3</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1190" type="#_x0000_t202" style='position:absolute;
    left:4509;top:3588;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1190'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>4</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1191" type="#_x0000_t202" style='position:absolute;
    left:4224;top:3131;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1191'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>5</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1192" type="#_x0000_t202" style='position:absolute;
    left:6309;top:4022;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1192'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>3</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:shape id="_x0000_s1193" type="#_x0000_t202" style='position:absolute;
    left:5979;top:3565;width:630;height:614' filled="f" stroked="f">
    <v:textbox style='mso-next-textbox:#_x0000_s1193'>
     <![if !mso]>
     <table cellpadding=0 cellspacing=0 width="100%">
      <tr>
       <td><![endif]>
       <div>
       <p class=MsoNormal><span lang=EN-US>4</span></p>
       </div>
       <![if !mso]></td>
      </tr>
     </table>
     <![endif]></v:textbox>
   </v:shape><v:group id="_x0000_s1194" style='position:absolute;left:5415;
    top:4037;width:564;height:614' coordorigin="3450,3266" coordsize="564,614">
    <v:group id="_x0000_s1195" style='position:absolute;left:3450;top:3416;
     width:294;height:203' coordorigin="3210,3176" coordsize="294,203">
     <v:shape id="_x0000_s1196" style='position:absolute;left:3210;top:3176;
      width:129;height:199' coordsize="129,199" path="m129,l,199e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1197" style='position:absolute;left:3234;
      top:3375;width:261;height:3' coordsize="261,3" path="m,3l261,e" filled="f">
      <v:path arrowok="t"/>
     </v:shape><v:shape id="_x0000_s1198" style='position:absolute;left:3390;
      top:3180;width:114;height:199' coordsize="114,199" path="m114,199l,e"
      filled="f">
      <v:stroke endarrow="block" endarrowwidth="narrow" endarrowlength="short"/>
      <v:path arrowok="t"/>
     </v:shape></v:group><v:shape id="_x0000_s1199" type="#_x0000_t202"
     style='position:absolute;left:3594;top:3266;width:420;height:614'
     filled="f" stroked="f">
     <v:textbox style='mso-next-textbox:#_x0000_s1199'>
      <![if !mso]>
      <table cellpadding=0 cellspacing=0 width="100%">
       <tr>
        <td><![endif]>
        <div>
        <p class=MsoNormal><span lang=EN-US>1</span></p>
        </div>
        <![if !mso]></td>
       </tr>
      </table>
      <![endif]></v:textbox>
    </v:shape></v:group></v:group></v:group><v:shape id="_x0000_s1200" type="#_x0000_t202"
  style='position:absolute;left:7360;top:3221;width:839;height:613' filled="f"
  stroked="f">
  <v:textbox>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal><span lang=EN-US>+</span></p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shape id="_x0000_s1201" type="#_x0000_t202" style='position:absolute;
  left:5965;top:2824;width:839;height:613' filled="f" stroked="f">
  <v:textbox>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal><span lang=EN-US>+</span></p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><w:wrap side="right"/>
</v:group><![endif]--><![if !vml]><span style='mso-ignore:vglayout'>

<table cellpadding=0 cellspacing=0 align=left>
 <tr>
  <td width=75 height=6></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=497 height=207 src="da05.files/image037.gif" v:shapes="_x0000_s1046 _x0000_s1047 _x0000_s1048 _x0000_s1049 _x0000_s1050 _x0000_s1051 _x0000_s1052 _x0000_s1053 _x0000_s1054 _x0000_s1055 _x0000_s1056 _x0000_s1057 _x0000_s1058 _x0000_s1059 _x0000_s1060 _x0000_s1061 _x0000_s1062 _x0000_s1063 _x0000_s1064 _x0000_s1065 _x0000_s1066 _x0000_s1067 _x0000_s1068 _x0000_s1069 _x0000_s1070 _x0000_s1071 _x0000_s1072 _x0000_s1073 _x0000_s1074 _x0000_s1075 _x0000_s1076 _x0000_s1077 _x0000_s1078 _x0000_s1079 _x0000_s1080 _x0000_s1081 _x0000_s1082 _x0000_s1083 _x0000_s1084 _x0000_s1085 _x0000_s1086 _x0000_s1087 _x0000_s1088 _x0000_s1089 _x0000_s1090 _x0000_s1091 _x0000_s1092 _x0000_s1093 _x0000_s1094 _x0000_s1095 _x0000_s1096 _x0000_s1097 _x0000_s1098 _x0000_s1099 _x0000_s1100 _x0000_s1101 _x0000_s1102 _x0000_s1103 _x0000_s1104 _x0000_s1105 _x0000_s1106 _x0000_s1107 _x0000_s1108 _x0000_s1109 _x0000_s1110 _x0000_s1111 _x0000_s1112 _x0000_s1113 _x0000_s1114 _x0000_s1115 _x0000_s1116 _x0000_s1117 _x0000_s1118 _x0000_s1119 _x0000_s1120 _x0000_s1121 _x0000_s1122 _x0000_s1123 _x0000_s1124 _x0000_s1125 _x0000_s1126 _x0000_s1127 _x0000_s1128 _x0000_s1129 _x0000_s1130 _x0000_s1131 _x0000_s1132 _x0000_s1133 _x0000_s1134 _x0000_s1135 _x0000_s1136 _x0000_s1137 _x0000_s1138 _x0000_s1139 _x0000_s1140 _x0000_s1141 _x0000_s1142 _x0000_s1143 _x0000_s1144 _x0000_s1145 _x0000_s1146 _x0000_s1147 _x0000_s1148 _x0000_s1149 _x0000_s1150 _x0000_s1151 _x0000_s1152 _x0000_s1153 _x0000_s1154 _x0000_s1155 _x0000_s1156 _x0000_s1157 _x0000_s1158 _x0000_s1159 _x0000_s1160 _x0000_s1161 _x0000_s1162 _x0000_s1163 _x0000_s1164 _x0000_s1165 _x0000_s1166 _x0000_s1167 _x0000_s1168 _x0000_s1169 _x0000_s1170 _x0000_s1171 _x0000_s1172 _x0000_s1173 _x0000_s1174 _x0000_s1175 _x0000_s1176 _x0000_s1177 _x0000_s1178 _x0000_s1179 _x0000_s1180 _x0000_s1181 _x0000_s1182 _x0000_s1183 _x0000_s1184 _x0000_s1185 _x0000_s1186 _x0000_s1187 _x0000_s1188 _x0000_s1189 _x0000_s1190 _x0000_s1191 _x0000_s1192 _x0000_s1193 _x0000_s1194 _x0000_s1195 _x0000_s1196 _x0000_s1197 _x0000_s1198 _x0000_s1199 _x0000_s1200 _x0000_s1201"></td>
 </tr>
</table>

</span><![endif]><span lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><o:p>&nbsp;</o:p></span></p>

<br style='mso-ignore:vglayout' clear=ALL>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>(3)</span><span style='font-family:宋体;
color:black'>计算<span lang=EN-US>C(n,k)(0&lt;=k&lt;=n)</span></span><span
style='font-family:宋体'>的非递归算法<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>int</b> cnk(<b style='mso-bidi-font-weight:
normal'>int</b> n,<b style='mso-bidi-font-weight:normal'>int</b> k)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<b style='mso-bidi-font-weight:
normal'>int</b> i; long x=1,y=1;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>for</b> (i=1;i&lt;=k;i++) x*=i;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>for</b> (i=n-k+1;i&lt;=n;i++) y*=i;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>return</b>(y/x)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>}//cnk<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>12.[</span><span
style='font-family:宋体'>题目分析<span lang=EN-US>]</span>本题属于排序问题，只是排出正负，不排出大小。可在数组首尾设两个指针<span
lang=EN-US>i</span>和<span lang=EN-US>j</span>，<span lang=EN-US>i</span>自小至大搜索到负数停止，<span
lang=EN-US>j</span>自大至小搜索到正数停止。然后<span lang=EN-US>i</span>和<span lang=EN-US>j</span>所指<span
style='color:red'>数据</span>交换，继续以上过程，直到<span lang=EN-US> i=j</span>为止。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.25pt;mso-char-indent-count:2.0'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>void</span></b><span
lang=EN-US style='font-family:宋体'> Arrange(<b style='mso-bidi-font-weight:normal'>int</b>
A[],<b style='mso-bidi-font-weight:normal'>int</b> n) <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:38.7pt;mso-char-indent-count:3.49'><span
lang=EN-US style='font-family:宋体'>//n</span><span style='font-family:宋体'>个整数存于数组<span
lang=EN-US>A</span>中，本算法将数组中所有正数排在所有负数的前面<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>{<b
style='mso-bidi-font-weight:normal'>int</b> i=0,j=n-1,x;<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>用类<span
lang=EN-US>C</span>编写，数组下标从<span lang=EN-US>0</span>开始<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>while</b>(i&lt;j)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:39.5pt;mso-char-indent-count:3.56'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>while</b>(i&lt;j
&amp;&amp; A[i]&gt;0)<span style='mso-spacerun:yes'>&nbsp; </span>i++;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:45.1pt;mso-char-indent-count:4.05'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(i&lt;j &amp;&amp; A[j]&lt;0)<span
style='mso-spacerun:yes'>&nbsp; </span>j--;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:34.05pt;mso-char-indent-count:3.07'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>if</b>(i&lt;j) {x=A[i]; A[i++]=A[j];
A[j--]=x; }//</span><span style='font-family:宋体'>交换<span lang=EN-US>A[i] </span>与<span
lang=EN-US>A[j]<o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:39.5pt;mso-char-indent-count:3.56'><span
lang=EN-US style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>}//</span><span
style='font-family:宋体'>算法<span lang=EN-US>Arrange</span>结束<span lang=EN-US>.<o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>[</span><span style='font-family:宋体'>算法讨论<span
lang=EN-US>]</span>对数组中元素各比较一次，比较次数为<span lang=EN-US>n</span>。最佳情况<span
lang=EN-US>(</span>已排好<span lang=EN-US>,</span>正数在前<span lang=EN-US>,</span>负数在后<span
lang=EN-US>)</span>不发生交换，最差情况<span lang=EN-US>(</span>负数均在正数前面<span lang=EN-US>)</span>发生<span
lang=EN-US>n/2</span>次交换。用类<span lang=EN-US>c</span>编写，数组界偶是<span lang=EN-US>0..n-1</span>。空间复杂度为<span
lang=EN-US>O(1).<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:11.1pt;mso-para-margin-left:1.0gd'><span
style='font-family:宋体'>类似本题的其它题的解答<span lang=EN-US>:</span>：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:11.1pt;mso-char-indent-count:1.0'><span
style='font-family:宋体'>（<span lang=EN-US>1</span>）与上面<span lang=EN-US>12</span>题同，因要求空间复杂度也是<span
lang=EN-US>O(n)</span>，可另设一数组<span lang=EN-US>C</span>，对<span lang=EN-US>A</span>数组从左到右扫描，小于零的数在<span
lang=EN-US>C</span>中从左（低下标）到右（高下标）存，大于等于零的数在<span lang=EN-US>C</span>中从右到左存。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:11.1pt;mso-para-margin-left:1.0gd'><span
style='font-family:宋体'>（<span lang=EN-US>2</span>）将<span lang=EN-US>12</span>题中判定正数<span
lang=EN-US>(A[i]&gt;0)</span>改为判偶数<span lang=EN-US>(A[i]%2==0)</span>，将判负数<span
lang=EN-US>(A[j]&lt;0)</span>改为<span lang=EN-US>(A[j]%2!=0)</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:11.1pt;mso-para-margin-left:1.0gd'><span
style='font-family:宋体'>（<span lang=EN-US>3</span>）同（<span lang=EN-US>2</span>），只是要求奇数排在偶数之前。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:11.1pt;mso-para-margin-left:1.0gd'><span
style='font-family:宋体'>（<span lang=EN-US>4</span>）利用快速排序思想，进行一趟划分。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:255.5pt;mso-para-margin-left:1.98gd;
text-indent:-233.55pt;mso-char-indent-count:-20.98'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>int</span></b><span lang=EN-US
style='font-family:宋体'> Partition(<b style='mso-bidi-font-weight:normal'>int</b>
A[],<b style='mso-bidi-font-weight:normal'>int</b> n)<span
style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'>//</span><span style='font-family:宋体'>将<span lang=EN-US>n</span>个元素的数组<span
lang=EN-US>A</span>调整为左右两部分，且左边所有元素小于右边所有元素，返回分界位置。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>int</b>
i=0,j=n-1,rp=A[0];<span style='mso-spacerun:yes'>&nbsp; </span>//</span><span
style='font-family:宋体'>设数组元素为整型<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>while</b>(i&lt;j)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span>{<b
style='mso-bidi-font-weight:normal'>while</b>(i&lt;j &amp;&amp;A[j]&gt;=rp)<span
style='mso-spacerun:yes'>&nbsp; </span>j--;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>while</b>(i&lt;j &amp;&amp;A[i]&lt;=rp)<span
style='mso-spacerun:yes'>&nbsp; </span>i++;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>if</b>(i&lt;j) { x=A[i];A[i]=A[j]; A[j]=x;
}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>A[i]=rp; <b
style='mso-bidi-font-weight:normal'>return</b>(i);<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>//</span><span style='font-family:
宋体'>分界元素<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:254.65pt;mso-para-margin-left:1.98gd;
text-indent:-232.7pt;mso-char-indent-count:-20.98'><span lang=EN-US
style='font-family:宋体'>}// Partition<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>13. [</span><span
style='font-family:宋体'>题目分析<span lang=EN-US>] </span>设<span lang=EN-US>n</span>个元素存放在数组<span
lang=EN-US>A[1..n]</span>中。设<span lang=EN-US>S</span>初始为空集，可依次将数组<span
lang=EN-US>A</span>的每一个元素并入<span lang=EN-US>S</span>，产生了含一个元素的若干集合，再以含一个元素的集合为初始集合，依次并入<span
lang=EN-US>A</span>的第二个（异于<span lang=EN-US>S</span>的那个元素）元素并入<span lang=EN-US>S</span>，形成了含两个元素的若干集合，……，如此下去，直至<span
lang=EN-US>A[i]</span>的全部元素并入。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>CONST</span></b><span
lang=EN-US style='font-family:宋体'> n=10;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>TYPE</span></b><span
lang=EN-US style='font-family:宋体'> datatype=char;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>VAR</span></b><span lang=EN-US
style='font-family:宋体'> A: array[1..n] OF datatype;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>PROC</span></b><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>powerset(s:set OF datatype)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='font-family:宋体'>[outset(s);<span style='mso-spacerun:yes'>&nbsp;
</span>//</span><span style='font-family:宋体'>输出集合<span lang=EN-US>S<o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.25pt;mso-char-indent-count:2.45'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>FOR</span></b><span
lang=EN-US style='font-family:宋体'> i:=1 <b style='mso-bidi-font-weight:normal'>TO</b>
n <b style='mso-bidi-font-weight:normal'>DO</b><span
style='mso-spacerun:yes'>&nbsp; </span>powerset(S+A[i]);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='font-family:宋体'>]<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>ENDP</span></b><span
lang=EN-US style='font-family:宋体'>;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span style='font-family:宋体'>调用本过程时，参数<span
lang=EN-US>S</span>为空集<span lang=EN-US>[]</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>14</span><span
style='font-family:宋体'>、<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>设稀疏矩阵是<span
lang=EN-US>Amxn,Hm</span>是总表头指针。设<span lang=EN-US>rch</span>是行列表头指针，则<span
lang=EN-US>rch-&gt;right=rch</span>时该行无非零元素，用<span lang=EN-US>i</span>记行号，用一维数组元素<span
lang=EN-US>A[i]</span>记第<span lang=EN-US>i</span>行非零元个数。（为方便输出，设元素是整数。）<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>int</span></b><span
lang=EN-US style='font-family:宋体'> MatrixNum(Olink Hm)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>输出由<span
lang=EN-US>Hm</span>指向的十字链表中每一行的非零元素个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{Olink <span style='mso-bidi-font-weight:
bold'>rch=Hm-&gt;uval.next<b>, </b></span>p;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>int</b> A[]; i=1;//</span><span
style='font-family:宋体'>数组<span lang=EN-US>A</span>记各行非零元个数<span lang=EN-US>,i</span>记行号<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(rch!=Hm)//</span><span style='font-family:
宋体'>循环完各行列表头<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>{p=rch-&gt;right; num=0; //p</span><span style='font-family:宋体'>是稀疏矩阵行内工作指针<span
lang=EN-US>,num</span>记该行非零个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>while</b>(p!=rch)//</span><span
style='font-family:宋体'>完成行内非零元的查找<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>{printf(“M[%d][%d]=%d”,p-&gt;row,p-&gt;col,p-&gt;<span style='mso-bidi-font-weight:
bold'>uval.e</span>);<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>num++;p=p-&gt;right;
printf(“\n”);//</span><span style='font-family:宋体'>指针后移<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp; </span>}<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'>A[i++]=num;//</span><span style='font-family:宋体'>存该行非零元个数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'>rch=rch-&gt;<span style='mso-bidi-font-weight:bold'>uval.next</span>;//</span><span
style='font-family:宋体'>移到下一行列表头<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'>num=0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.25pt;mso-char-indent-count:2.0'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>for</span></b><span lang=EN-US
style='font-family:宋体'>(j=1;j&lt;i;j++)//</span><span style='font-family:宋体'>输出各行非零元个数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span>{num+=A[j];
printf(“</span><span style='font-family:宋体'>第<span lang=EN-US>%d</span>行非零元个数为<span
lang=EN-US>%d\n”,j,A[j]); }<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>return</b>(num);//</span><span
style='font-family:宋体'>稀疏矩阵非零元个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:27.75pt;mso-char-indent-count:2.5'><span
lang=EN-US style='font-family:宋体'>}</span><span style='font-family:宋体'>算法结束<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>15</span><span
style='font-family:宋体'>、<span lang=EN-US>[</span>题目分析<span lang=EN-US>] </span>广义表的元素有原子和表。在读入广义表“表达式”时，遇到左括号‘（’就递归的构造子表，否则若是原子，就建立原子结点；若读入逗号‘，’，就递归构造后续子表；若<span
lang=EN-US>n=0</span>，则构造含空格字符的空表，直到碰到输入结束符号（‘<span lang=EN-US>#</span>’）。设广义表的形式定义如下：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>typedef</span></b><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>struct</b> node<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>int</b>
tag;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//tag=0</span><span style='font-family:宋体'>为原子，<span lang=EN-US>tag=1</span>为子表<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>struc</span></b><span
lang=EN-US style='font-family:宋体'>t node *link;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span><span style='font-family:宋体'>指向后继结点的指针<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>union</span></b><span
lang=EN-US style='font-family:宋体'> {<b style='mso-bidi-font-weight:normal'>struct</b>
node *slink; //</span><span style='font-family:宋体'>指向子表的指针<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>char</b> data;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span><span style='font-family:宋体'>原子<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:44.15pt;mso-char-indent-count:3.98'><span lang=EN-US
style='font-family:宋体'>}element;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>}Glist;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>Glist *creat ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>建立广义表的存储结构<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>char</b>
ch; Glist *gh;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span>scanf(“%c”,&amp;ch);<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>if</b>(ch==’’) gh=null;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>else</b>
{gh=(Glist*)malloc(sizeof(Glist));<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>if</b>(ch==‘(’){gh-&gt;tag=1; //</span><span
style='font-family:宋体'>子表<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:55.45pt;mso-char-indent-count:5.0'><span lang=EN-US
style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:red'>gh-&gt;</span>element.slink=creat(); } //</span><span
style='font-family:宋体'>递归构造子表<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:71.35pt;mso-char-indent-count:6.41'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>else</span></b><span
lang=EN-US style='font-family:宋体'> {gh-&gt;tag=0;gh-&gt;element.data=ch;} //</span><span
style='font-family:宋体'>原子结点<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:44.35pt;mso-char-indent-count:4.0'><span lang=EN-US
style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>scanf(“%c”,&amp;ch);<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>if</span></b><span lang=EN-US
style='font-family:宋体'>(gh!=null) <b style='mso-bidi-font-weight:normal'>if</b>(ch==‘,’)
gh-&gt;link=creat()</span><span style='font-family:宋体'>；<span lang=EN-US> //</span>递归构造后续广义表<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>else</b> gh-&gt;link=null;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>return</span></b><span
lang=EN-US style='font-family:宋体'>(gh);<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:11.1pt;mso-char-indent-count:1.0'><span
lang=EN-US style='font-family:宋体'>}</span><span style='font-family:宋体'>算法结束<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
font-family:宋体'>16</span><span style='mso-bidi-font-size:10.5pt;font-family:
宋体'>、<span lang=EN-US>(1)</span>略<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'>(2)</span><span
style='mso-bidi-font-size:10.5pt;font-family:宋体'>求广义表原子个数的递归模型如下<span
lang=EN-US style='color:red'><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-bidi-font-size:10.5pt;
font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>f(p)=<sub><!--[if gte vml 1]><v:shape
 id="_x0000_i1040" type="#_x0000_t75" style='width:198.75pt;height:38.25pt'
 o:ole="">
 <v:imagedata src="da05.files/image038.wmz" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=265 height=51
src="da05.files/image039.gif" v:shapes="_x0000_i1040"><![endif]></sub><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1040"
  DrawAspect="Content" ObjectID="_1149856374">
 </o:OLEObject>
</xml><![endif]--><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>PROC</span></b><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'> Number(p:glist; <b style='mso-bidi-font-weight:normal'>VAR</b>
n: integer)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>VAR</span></b><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'> m:integer;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'>n:=0;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>IF</span></b><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'> p&lt;&gt;NIL <b style='mso-bidi-font-weight:normal'>THEN</b>
<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:5.55pt;mso-para-margin-left:.5gd'><span
lang=EN-US style='mso-bidi-font-size:10.5pt;font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>[<b
style='mso-bidi-font-weight:normal'>IF</b> p^.tag=0 <b style='mso-bidi-font-weight:
normal'>THEN</b> n:=1 <b style='mso-bidi-font-weight:normal'>ELSE</b> <span
style='color:red'>N</span>umber(p^.sublist,m)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:5.55pt;mso-para-margin-left:.5gd;
text-indent:33.25pt;mso-char-indent-count:3.0'><span lang=EN-US
style='mso-bidi-font-size:10.5pt;font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;</span>n:=n+m; <span style='color:red'>Number</span>(p^.link,m);<span
style='mso-spacerun:yes'>&nbsp; </span>n:=n+m; ]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>ENDP</span></b><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>17. <b
style='mso-bidi-font-weight:normal'>int</b> Count(glist *gl)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>求广义表原子结点数据域之和，原子结点数据域定义为整型<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>if</b>(gl==null)
<b style='mso-bidi-font-weight:normal'>return</b>(0);<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>else</b> <b style='mso-bidi-font-weight:
normal'>if</b> (gl-&gt;tag==0) <b style='mso-bidi-font-weight:normal'>return</b>((p-&gt;data)+count(gl-&gt;link));<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>else</b> <b style='mso-bidi-font-weight:
normal'>return</b>(count(gl-&gt;sublist)+count(gl-&gt;link));<span
style='mso-spacerun:yes'>&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>}// Count<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>18.</span><span
style='font-family:宋体'>（<span lang=EN-US>1</span>）在<span lang=EN-US>n</span>个正整数中，选出<span
lang=EN-US>k(k&lt;&lt;m</span>）个最大的数，应使用堆排序方法。对深度为<span lang=EN-US>h</span>的堆，筛选算法中关键字的比较次数至多为<span
lang=EN-US>2</span>（<span lang=EN-US>h-1</span>）次。建堆总共进行的关键字比较次数不超过<span
lang=EN-US>4n</span>，堆排序在最坏情况下的时间复杂度是<span lang=EN-US>O(nlogn</span>）。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>int</b> r[1000]; // r[1000]</span><span style='font-family:宋体'>是整型数组<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='font-family:宋体'>（<span lang=EN-US>2</span>）<b
style='mso-bidi-font-weight:normal'><span lang=EN-US>void</span></b><span
lang=EN-US> sift(<b style='mso-bidi-font-weight:normal'>int</b> r[],<b
style='mso-bidi-font-weight:normal'>int</b> k,m,tag)<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>已知<span
lang=EN-US>r[k+1..m]</span>是堆，本算法将<span lang=EN-US>r[k..m]</span>调整成堆，<span
lang=EN-US>tag=1</span>建立大根堆<span lang=EN-US>,tag=2</span>建立小根堆<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>{i=k;j=2*i;x=r[k];<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>while</b> (j&lt;=m)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>{<b style='mso-bidi-font-weight:normal'>if</b> (tag==2)<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>建立小根堆<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:27.75pt;mso-char-indent-count:2.5'><span lang=EN-US
style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>if</b> (j&lt;m
&amp;&amp; r[j]&gt;r[j+1]) j++;//</span><span style='font-family:宋体'>沿关键字小的方向筛选<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>if</b>(r[j]&lt;x)) {r[i]=r[j];i=j;j=2*i;}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>else</b> break;}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:16.7pt;mso-char-indent-count:1.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>else</span></b><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span>//</span><span
style='font-family:宋体'>建立大根堆<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:27.75pt;mso-char-indent-count:2.5'><span lang=EN-US
style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>if</b> (j&lt;m
&amp;&amp; r[j]&lt;r[j+1]) j++;//</span><span style='font-family:宋体'>沿关键字小的方向筛选<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>if</b>(r[j]&gt;x) {r[i]=r[j];i=j;j=2*i;}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>else</b> break;}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:16.65pt;mso-char-indent-count:1.5'><span lang=EN-US
style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:22.2pt;mso-char-indent-count:2.0'><span lang=EN-US
style='font-family:宋体'>r[i]=x;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:11.1pt;mso-char-indent-count:1.0'><span lang=EN-US
style='font-family:宋体'>}//sift<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>main(<b style='mso-bidi-font-weight:normal'>int</b>
argc,char *argv[])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>根据命令行中的输入，从<span
lang=EN-US>1000</span>个数中选取<span lang=EN-US>n</span>个最大数或<span lang=EN-US>n</span>个最小数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>int</b>
m=1000,i,j;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>n=augv[2];<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>//</span><span
style='font-family:宋体'>从命令行输入的第二个参数是需要输出的数的个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>if</span></b><span lang=EN-US
style='font-family:宋体'>(n&gt;m){printf(“</span><span style='font-family:宋体'>参数错误<span
lang=EN-US>\n”);exit(0);}<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>for</b>(i=0;i&lt;m;i++)
scanf(“%d”,&amp;r[i]); //</span><span style='font-family:宋体'>输入<span
lang=EN-US>1000</span>个大小不同的正整数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><b
style='mso-bidi-font-weight:normal'>if</b> (augv[1]==</span><span
style='font-family:宋体'>‘<span lang=EN-US>a’) <span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>//</span>输出<span lang=EN-US>n</span>个最大数，要求建立大根堆<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>for</b>(i=m/2;i&gt;0;i--)
sift(r,i,m,1)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>printf(“%d</span><span style='font-family:宋体'>个最大数依次为<span lang=EN-US>\n”,n);<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>for</span></b><span lang=EN-US
style='font-family:宋体'>(i=m;i&gt;m-n+1;i--)<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>输出<span
lang=EN-US>n</span>个最大数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>{printf(“%5d”,r[i]);<span style='mso-spacerun:yes'>&nbsp; </span>j++; <b
style='mso-bidi-font-weight:normal'>if</b>((j+1)%5==0) printf(“\n”);//</span><span
style='font-family:宋体'>一行打印<span lang=EN-US>5</span>个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>sift(r,1,i-1,1); } //</span><span style='font-family:宋体'>调堆<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd'><span
lang=EN-US style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:33.4pt;mso-char-indent-count:3.0'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>else</span></b><span
lang=EN-US style='font-family:宋体'> //(augv[1]==</span><span style='font-family:
宋体'>‘<span lang=EN-US>i’) <span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>//</span>输出<span lang=EN-US>n</span>个最小数，要求建立小根堆<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>for</b>(i=m/2;i&gt;0;i--)
sift(r,i,m,2)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>printf(“%d</span><span
style='font-family:宋体'>个最小数依次为<span lang=EN-US>\n”,n);<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>for</span></b><span lang=EN-US
style='font-family:宋体'>(i=m;i&gt;m-n+1;i--)<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>输出<span
lang=EN-US>n</span>个最小数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>{printf(“%5d”,r[i]);<span style='mso-spacerun:yes'>&nbsp; </span>j++; <b
style='mso-bidi-font-weight:normal'>if</b>((j+1)%5==0) printf(“\n”);//</span><span
style='font-family:宋体'>一行打印<span lang=EN-US>5</span>个数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>sift(r,1,i-1,2); } //</span><span style='font-family:宋体'>调堆<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:38.8pt;mso-para-margin-left:3.5gd'><span
lang=EN-US style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>}//main<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>[</span><span style='font-family:宋体'>算法讨论<span
lang=EN-US>]</span>算法讨论了建堆，并输出<span lang=EN-US>n</span>（<span lang=EN-US>n</span>小于等于<span
lang=EN-US>m</span>）个最大<span lang=EN-US>(</span>小<span lang=EN-US>)</span>数的情况，由于要求输出<span
lang=EN-US>n</span>个最大数或最小数，必须建立极大化堆和极小化堆。注意输出时的<span lang=EN-US>for</span>循环控制到变量<span
lang=EN-US>i</span>从<span lang=EN-US>m</span>变化到<span lang=EN-US>m-n+1</span>，这是堆的性质决定的，只有堆顶元素才是最大<span
lang=EN-US>(</span>小<span lang=EN-US>)</span>的。要避免使<span lang=EN-US>i</span>从<span
lang=EN-US>1</span>到<span lang=EN-US>n</span>来输出<span lang=EN-US>n</span>个最大<span
lang=EN-US>(</span>小<span lang=EN-US>)</span>数的错误。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>19</span><span
style='font-family:宋体'>、<span lang=EN-US>[</span>题目分析<span lang=EN-US>] </span>题目要求调整后第一数组（<span
lang=EN-US>A</span>）中所有数均不大于第二个数组（<span lang=EN-US>B</span>）中所有数。因两数组分别有序，这里实际是要求第一数组的最后一个数<span
lang=EN-US>A[m-1]</span>不大于第二个数组的第一个数<span lang=EN-US>B[0]</span>。由于要求将第二个数组的数插入到第一个数组中。因此比较<span
lang=EN-US>A[m-1]</span>和<span lang=EN-US>B[0]</span>，如<span lang=EN-US>A[m-1]&gt;B[0]</span>，则交换。交换后仍保持<span
lang=EN-US>A</span>和<span lang=EN-US>B</span>有序。重复以上步骤，直到<span lang=EN-US>A[m-1]&lt;=B[0]</span>为止。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>void</span></b><span
lang=EN-US style='font-family:宋体'> ReArranger (<b style='mso-bidi-font-weight:
normal'>int</b> A[],B[],m,n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//A</span><span style='font-family:宋体'>和<span
lang=EN-US>B</span>是各有<span lang=EN-US>m</span>个和<span lang=EN-US>n</span>个整数的非降序数组，本算法将<span
lang=EN-US>B</span>数组元素逐个插入到<span lang=EN-US>A</span>中，使<span lang=EN-US>A</span>中各元素均不大于<span
lang=EN-US>B</span>中各元素，且两数组仍保持非降序排列。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{ <b style='mso-bidi-font-weight:normal'>while</b>
(A[m-1]&gt;B[0])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>{x=A[m-1];A[m-1]=B[0]; //</span><span style='font-family:宋体'>交换<span
lang=EN-US>A[m-1]</span>和<span lang=EN-US>B[0]<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>j=1;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>wkile(j&lt;n &amp;&amp; B[j]&lt;x) B[j-1]=B[j++];<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>//</span><span
style='font-family:宋体'>寻找<span lang=EN-US>A[m-1]</span>的插入位置<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>B[j-1]=x;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:16.65pt;mso-char-indent-count:1.5'><span lang=EN-US
style='font-family:宋体'>x=A[m-1];i=m-2;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>wkile(i&gt;=0 &amp;&amp; A[i]&gt;x) A[i+1]=A[i--];<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>寻找<span
lang=EN-US>B[0]</span>的插入位置<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>A[i+1]=x;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>}<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>}</span><span style='font-family:宋体'>算法结束<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>20</span><span
style='font-family:宋体'>、<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>本题中数组<span
lang=EN-US>A</span>的相邻两段分别有序，要求将两段合并为一段有序。由于要求附加空间为<span lang=EN-US>O(1),</span>所以将前段最后一个元素与后段第一个元素比较，若正序，则算法结束；若逆序则交换，并将前段的最后一个元素插入到后段中，使后段有序。重复以上过程直到正序为止。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>void</span></b><span
lang=EN-US style='font-family:宋体'> adjust(<b style='mso-bidi-font-weight:normal'>int</b>
A[],<b style='mso-bidi-font-weight:normal'>int</b> n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>数组<span
lang=EN-US>A[n-2k+1..n-k]</span>和<span lang=EN-US>[n-k+1..n]</span>中元素分别升序，算法使<span
lang=EN-US>A[n-2k+1..n]</span>升序<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{i=n-k;j=n-k+1;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(A[i]&gt;A[j])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>{x=A[i]; A[i]=A[j]; //</span><span style='font-family:宋体'>值小者左移，值大者暂存于<span
lang=EN-US>x<o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>k=j+1;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>while</b> (k&lt;n &amp;&amp;
x&gt;A[k]) A[k-1]=A[k++];<span style='mso-spacerun:yes'>&nbsp; </span>//</span><span
style='font-family:宋体'>调整后段有序<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>A[k-1]=x;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>i--; j--;<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>//</span><span style='font-family:宋体'>修改前段最后元素和后段第一元素的指针<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>}</span><span style='font-family:宋体'>算法结束<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>[</span><span style='font-family:宋体'>算法讨论<span
lang=EN-US>]</span>最佳情况出现在数组第二段<span lang=EN-US>[n-k+1..n]</span>中值最小元素<span
lang=EN-US>A[n-k+1]</span>大于等于第一段值最大元素<span lang=EN-US>A[n-k]</span>，只比较一次无须交换。最差情况出现在第一段的最小值大于第二段的最大值，两段数据间发生了<span
lang=EN-US>k</span>次交换，而且每次段交换都在段内发生了平均（<span lang=EN-US>k-1</span>）次交换，时间复杂度为<span
lang=EN-US>O(n</span></span><sup><span lang=EN-US style='mso-bidi-font-size:
10.5pt;font-family:宋体'>2</span></sup><span lang=EN-US style='font-family:宋体'>)</span><span
style='font-family:宋体'>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>21</span><span
style='font-family:宋体'>、<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>题目要求按<span
lang=EN-US>B</span>数组内容调整<span lang=EN-US>A</span>数组中记录的次序，可以从<span lang=EN-US>i=1</span>开始，检查是否<span
lang=EN-US>B[i]=i</span>。如是，则<span lang=EN-US>A[i]</span>恰为正确位置，不需再调；否则，<span
lang=EN-US>B[i]=k≠i</span>，则将<span lang=EN-US>A[i]</span>和<span lang=EN-US>A[k]</span>对调，<span
lang=EN-US>B[i]</span>和<span lang=EN-US>B[k]</span>对调，直到<span lang=EN-US>B[i]=i</span>为止。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>void</span></b><span
lang=EN-US style='font-family:宋体'> CountSort (rectype A[],<b style='mso-bidi-font-weight:
normal'>int</b> B[])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>//A</span><span style='font-family:宋体'>是<span
lang=EN-US>100</span>个记录的数组，<span lang=EN-US>B</span>是整型数组，本算法利用数组<span
lang=EN-US>B</span>对<span lang=EN-US>A</span>进行计数排序<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>{<b style='mso-bidi-font-weight:normal'>int</b>
i,j,n=100;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'>i=1;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(i&lt;n)<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>{<b
style='mso-bidi-font-weight:normal'>if</b>(B[i]!=i) <span
style='mso-spacerun:yes'>&nbsp;</span>//</span><span style='font-family:宋体'>若<span
lang=EN-US>B[i]=i</span>则<span lang=EN-US>A[i]</span>正好在自己的位置上，则不需要调整<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>{ j=i; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'>while</b> (B[j]!=i)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{ k=B[j];
B[j]=B[k]; B[k]=k;<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>//
B[j]</span><span style='font-family:宋体'>和<span lang=EN-US>B[k]</span>交换<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>r0=A[j];A[j]=A[k]; A[k]=r0; } //r0</span><span style='font-family:宋体'>是数组<span
lang=EN-US>A</span>的元素类型<span lang=EN-US>,A[j]</span>和<span lang=EN-US>A[k]</span>交换<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:16.65pt;mso-char-indent-count:1.5'><span lang=EN-US
style='font-family:宋体'>i++;} //</span><span style='font-family:宋体'>完成了一个小循环，第<span
lang=EN-US>i</span>个已经安排好<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:27.75pt;mso-para-margin-left:2.5gd;
text-indent:5.55pt;mso-char-indent-count:.5'><span lang=EN-US style='font-family:
宋体'>}//</span><span style='font-family:宋体'>算法结束<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>22</span><span
style='font-family:宋体'>、<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>数组<span
lang=EN-US>A</span>和<span lang=EN-US>B</span>的元素分别有序，欲将两数组合并到<span lang=EN-US>C</span>数组，使<span
lang=EN-US>C</span>仍有序，应将<span lang=EN-US>A</span>和<span lang=EN-US>B</span>拷贝到<span
lang=EN-US>C</span>，只要注意<span lang=EN-US>A</span>和<span lang=EN-US>B</span>数组指针的使用，以及正确处理一数组读完数据后将另一数组余下元素复制到<span
lang=EN-US>C</span>中即可。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>void</span></b><span
lang=EN-US style='font-family:宋体'> union(<b style='mso-bidi-font-weight:normal'>int</b>
A[],B[],C[],m,n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>整型数组<span
lang=EN-US>A</span>和<span lang=EN-US>B</span>各有<span lang=EN-US>m</span>和<span
lang=EN-US>n</span>个元素，前者递增有序，后者递减有序，本算法将<span lang=EN-US>A</span>和<span
lang=EN-US>B</span>归并为递增有序的数组<span lang=EN-US>C</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>{i=0; j=n-1; k=0;// i</span><span
style='font-family:宋体'>，<span lang=EN-US>j</span>，<span lang=EN-US>k</span>分别是数组<span
lang=EN-US>A,B</span>和<span lang=EN-US>C</span>的下标，因用<span lang=EN-US>C</span>描述，下标从<span
lang=EN-US>0</span>开始<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(i&lt;m &amp;&amp; j&gt;=0)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp; </span><b
style='mso-bidi-font-weight:normal'>if</b>(a[i]&lt;b[j]) c[k++]=a[i++] <b
style='mso-bidi-font-weight:normal'>else</b> c[k++]=b[j--];<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(i&lt;m) c[k++]=a[i++];<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:5.55pt;mso-char-indent-count:.5'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体'>while</span></b><span
lang=EN-US style='font-family:宋体'>(j&gt;=0) c[k++]=b[j--];<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>}</span><span style='font-family:宋体'>算法结束<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:22.2pt;mso-char-indent-count:2.0'><span
lang=EN-US style='font-family:宋体'>[</span><span style='font-family:宋体'>算法讨论<span
lang=EN-US>]</span>若不允许另辟空间，而是利用<span lang=EN-US>A</span>数组（空间足够大），则初始<span
lang=EN-US>k=m+n-1</span>，请参见第<span lang=EN-US>2</span>章算法设计第<span lang=EN-US>4</span>题。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'>23</span><span
style='font-family:宋体'>、<span lang=EN-US>[</span>题目分析<span lang=EN-US>]</span>本题要求建立有序的循环链表。从头到尾扫描数组<span
lang=EN-US>A</span>，取出<span lang=EN-US>A[i]</span>（<span lang=EN-US>0&lt;=i&lt;n</span>）<span
lang=EN-US>,</span>然后到链表中去查找值为<span lang=EN-US>A[i]</span>的结点，若查找失败，则插入。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>LinkedList creat(ElemType A[],<b
style='mso-bidi-font-weight:normal'>int</b> n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>//</span><span style='font-family:宋体'>由含<span
lang=EN-US>n</span>个数据的数组<span lang=EN-US>A</span>生成循环链表，要求链表有序并且无值重复结点<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:16.65pt;mso-char-indent-count:1.5'><span
lang=EN-US style='font-family:宋体'>{LinkedList h;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>h=(LinkedList)malloc(sizeof(LNode));//</span><span
style='font-family:宋体'>申请结点<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>h-&gt;next=h;<span
style='mso-spacerun:yes'>&nbsp; </span>//</span><span style='font-family:宋体'>形成空循环链表<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-family:宋体'>for</span></b><span
lang=EN-US style='font-family:宋体'>(i=0;i&lt;n;i++)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;
</span>{pre=h;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:16.65pt;mso-char-indent-count:1.5'><span lang=EN-US
style='font-family:宋体'>p=h-&gt;next;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>while</b>(p!=h &amp;&amp;
p-&gt;data&lt;A[i])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:27.75pt;mso-char-indent-count:2.5'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span>{pre=p; p=p-&gt;next;}
//</span><span style='font-family:宋体'>查找<span lang=EN-US>A[i]</span>的插入位置<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span><b style='mso-bidi-font-weight:normal'>if</b>(p==h || p-&gt;data!=A[i])<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>//</span><span style='font-family:
宋体'>重复数据不再输入<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>{s=(LinkedList)malloc(sizeof(LNode));<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:11.1pt;mso-char-indent-count:1.0'><span lang=EN-US
style='font-family:宋体'><span style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>s-&gt;data=A[i];
pre-&gt;next=s; s-&gt;next=p;//</span><span style='font-family:宋体'>将结点<span
lang=EN-US>s</span>链入链表中<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:33.25pt;mso-char-indent-count:3.0'><span lang=EN-US
style='font-family:宋体'>}<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd;
text-indent:16.65pt;mso-char-indent-count:1.5'><span lang=EN-US
style='font-family:宋体'>}//for<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'>return</b>(h);<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:22.2pt;mso-para-margin-left:2.0gd'><span
lang=EN-US style='font-family:宋体'>}</span><span style='font-family:宋体'>算法结束<span
lang=EN-US><o:p></o:p></span></span></p>

</div>

</body>

</html>
